{"version":3,"file":"moq-player.umd.js","sources":["../../common/error.ts","../../media/catalog/index.ts","../../playback/audio.ts","../../common/ring.ts","../../playback/backend.ts","../../transport/stream.ts","../../transport/setup.ts","../../transport/control.ts","../../transport/objects.ts","../../common/async.ts","../../transport/publisher.ts","../../transport/subscriber.ts","../../transport/connection.ts","../../transport/client.ts","../../playback/index.ts"],"sourcesContent":["// I hate javascript\nexport function asError(e: any): Error {\n\tif (e instanceof Error) {\n\t\treturn e\n\t} else if (typeof e === \"string\") {\n\t\treturn new Error(e)\n\t} else {\n\t\treturn new Error(String(e))\n\t}\n}\n\nexport function isError(e: any): e is Error {\n\treturn e instanceof Error\n}\n","import { Connection } from \"../../transport\"\nimport { asError } from \"../../common/error\"\n\nexport interface CommonTrackFields {\n\tnamespace?: string\n\tpackaging?: string\n\trenderGroup?: number\n\taltGroup?: number\n}\n\nexport interface Root {\n\tversion: number\n\tstreamingFormat: number\n\tstreamingFormatVersion: string\n\tsupportsDeltaUpdates: boolean\n\tcommonTrackFields: CommonTrackFields\n\ttracks: Track[]\n}\n\nexport function encode(catalog: Root): Uint8Array {\n\tconst encoder = new TextEncoder()\n\tconst str = JSON.stringify(catalog)\n\treturn encoder.encode(str)\n}\n\nexport function decode(raw: Uint8Array): Root {\n\tconst decoder = new TextDecoder()\n\tconst str = decoder.decode(raw)\n\n\tconst catalog = JSON.parse(str)\n\tif (!isRoot(catalog)) {\n\t\tthrow new Error(\"invalid catalog\")\n\t}\n\n\t// Merge common track fields into each track.\n\tfor (const track of catalog.tracks) {\n\t\ttrack.altGroup ??= catalog.commonTrackFields.altGroup\n\t\ttrack.namespace ??= catalog.commonTrackFields.namespace\n\t\ttrack.packaging ??= catalog.commonTrackFields.packaging\n\t\ttrack.renderGroup ??= catalog.commonTrackFields.renderGroup\n\t}\n\n\treturn catalog\n}\n\nexport async function fetch(connection: Connection, namespace: string): Promise<Root> {\n\tconst subscribe = await connection.subscribe(namespace, \".catalog\")\n\ttry {\n\t\tconst segment = await subscribe.data()\n\t\tif (!segment) throw new Error(\"no catalog data\")\n\n\t\tconst chunk = await segment.read()\n\t\tif (!chunk) throw new Error(\"no catalog chunk\")\n\n\t\tawait segment.close()\n\t\tawait subscribe.close() // we done\n\n\t\tif (chunk.payload instanceof Uint8Array) {\n\t\t\treturn decode(chunk.payload)\n\t\t} else {\n\t\t\tthrow new Error(\"invalid catalog chunk\")\n\t\t}\n\t} catch (e) {\n\t\tconst err = asError(e)\n\n\t\t// Close the subscription after we're done.\n\t\tawait subscribe.close(1n, err.message)\n\n\t\tthrow err\n\t}\n}\n\nexport function isRoot(catalog: any): catalog is Root {\n\tif (!isCatalogFieldValid(catalog, \"packaging\")) return false\n\tif (!isCatalogFieldValid(catalog, \"namespace\")) return false\n\tif (!Array.isArray(catalog.tracks)) return false\n\treturn catalog.tracks.every((track: any) => isTrack(track))\n}\n\nexport interface Track {\n\tnamespace?: string\n\tname: string\n\tdepends?: any[]\n\tpackaging?: string\n\trenderGroup?: number\n\tselectionParams: SelectionParams // technically optional but not really\n\taltGroup?: number\n\tinitTrack?: string\n\tinitData?: string\n}\n\nexport interface Mp4Track extends Track {\n\tinitTrack?: string\n\tinitData?: string\n\tselectionParams: Mp4SelectionParams\n}\n\nexport interface SelectionParams {\n\tcodec?: string\n\tmimeType?: string\n\tbitrate?: number\n\tlang?: string\n}\n\nexport interface Mp4SelectionParams extends SelectionParams {\n\tmimeType: \"video/mp4\"\n}\n\nexport interface AudioTrack extends Track {\n\tname: string\n\tselectionParams: AudioSelectionParams\n}\n\nexport interface AudioSelectionParams extends SelectionParams {\n\tsamplerate: number\n\tchannelConfig: string\n}\n\nexport interface VideoTrack extends Track {\n\tname: string\n\tselectionParams: VideoSelectionParams\n\ttemporalId?: number\n\tspatialId?: number\n}\n\nexport interface VideoSelectionParams extends SelectionParams {\n\twidth: number\n\theight: number\n\tdisplayWidth?: number\n\tdisplayHeight?: number\n\tframerate?: number\n}\n\nexport function isTrack(track: any): track is Track {\n\tif (typeof track.name !== \"string\") return false\n\treturn true\n}\n\nexport function isMp4Track(track: any): track is Mp4Track {\n\tif (!isTrack(track)) return false\n\tif (typeof track.initTrack !== \"string\" && typeof track.initData !== \"string\") return false\n\tif (typeof track.selectionParams.mimeType !== \"string\") return false\n\treturn true\n}\n\nexport function isVideoTrack(track: any): track is VideoTrack {\n\tif (!isTrack(track)) return false\n\treturn isVideoSelectionParams(track.selectionParams)\n}\n\nexport function isVideoSelectionParams(params: any): params is VideoSelectionParams {\n\tif (typeof params.width !== \"number\") return false\n\tif (typeof params.height !== \"number\") return false\n\treturn true\n}\n\nexport function isAudioTrack(track: any): track is AudioTrack {\n\tif (!isTrack(track)) return false\n\treturn isAudioSelectionParams(track.selectionParams)\n}\n\nexport function isAudioSelectionParams(params: any): params is AudioSelectionParams {\n\tif (typeof params.channelConfig !== \"string\") return false\n\tif (typeof params.samplerate !== \"number\") return false\n\treturn true\n}\n\nfunction isCatalogFieldValid(catalog: any, field: string): boolean {\n\t//packaging,namespace if common would be listed in commonTrackFields but if fields\n\t//in commonTrackFields are mentiond in Tracks , the fields in Tracks precedes\n\n\tfunction isValidPackaging(packaging: any): boolean {\n\t\treturn packaging === \"cmaf\" || packaging === \"loc\"\n\t}\n\n\tfunction isValidNamespace(namespace: any): boolean {\n\t\treturn typeof namespace === \"string\"\n\t}\n\n\tlet isValidField: (value: any) => boolean\n\tif (field === \"packaging\") {\n\t\tisValidField = isValidPackaging\n\t} else if (field === \"namespace\") {\n\t\tisValidField = isValidNamespace\n\t} else {\n\t\tthrow new Error(`Invalid field: ${field}`)\n\t}\n\n\tif (catalog.commonTrackFields[field] !== undefined && !isValidField(catalog.commonTrackFields[field])) {\n\t\treturn false\n\t}\n\n\tfor (const track of catalog.tracks) {\n\t\tif (track[field] !== undefined && !isValidField(track[field])) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n\nexport function isMediaTrack(track: any): track is Track {\n\tif (track.name.toLowerCase().includes(\"audio\") || track.name.toLowerCase().includes(\"video\")) {\n\t\treturn true\n\t}\n\n\tif (track.selectionParams && track.selectionParams.codec) {\n\t\tconst codec = track.selectionParams.codec.toLowerCase()\n\t\tconst acceptedCodecs = [\"mp4a\", \"avc1\"]\n\n\t\tfor (const acceptedCodec of acceptedCodecs) {\n\t\t\tif (codec.includes(acceptedCodec)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\treturn false\n}\n","import * as Message from \"./worker/message\"\n\nimport registerMyAudioWorklet from \"audio-worklet:./worklet/index.ts\"\n\n// NOTE: This must be on the main thread\nexport class Audio {\n\tcontext: AudioContext\n\tworklet: Promise<AudioWorkletNode>\n\n\tconstructor(config: Message.ConfigAudio) {\n\t\tthis.context = new AudioContext({\n\t\t\tlatencyHint: \"interactive\",\n\t\t\tsampleRate: config.sampleRate,\n\t\t})\n\n\t\tthis.worklet = this.load(config)\n\t}\n\n\tprivate async load(config: Message.ConfigAudio): Promise<AudioWorkletNode> {\n\t\t// Load the worklet source code.\n\t\tawait registerMyAudioWorklet(this.context)\n\t\tconst volume = this.context.createGain()\n\t\tvolume.gain.value = 2.0\n\n\t\t// Create the worklet\n\t\tconst worklet = new AudioWorkletNode(this.context, \"renderer\")\n\n\t\tworklet.port.addEventListener(\"message\", this.on.bind(this))\n\t\tworklet.onprocessorerror = (e: Event) => {\n\t\t\tconsole.error(\"Audio worklet error:\", e)\n\t\t}\n\n\t\t// Connect the worklet to the volume node and then to the speakers\n\t\tworklet.connect(volume)\n\t\tvolume.connect(this.context.destination)\n\n\t\tworklet.port.postMessage({ config })\n\n\t\treturn worklet\n\t}\n\n\tprivate on(_event: MessageEvent) {\n\t\t// TODO\n\t}\n}\n","// Ring buffer with audio samples.\n\nenum STATE {\n\tREAD_POS = 0, // The current read position\n\tWRITE_POS, // The current write position\n\tLENGTH, // Clever way of saving the total number of enums values.\n}\n\ninterface FrameCopyToOptions {\n\tframeCount?: number\n\tframeOffset?: number\n\tplaneIndex: number\n}\n\n// This is implemented by AudioData in WebCodecs, but we don't import it because it's a DOM type.\ninterface Frame {\n\tnumberOfFrames: number\n\tnumberOfChannels: number\n\tcopyTo(dst: Float32Array, options: FrameCopyToOptions): void\n}\n\n// No prototype to make this easier to send via postMessage\nexport class RingShared {\n\tstate: SharedArrayBuffer\n\n\tchannels: SharedArrayBuffer[]\n\tcapacity: number\n\n\tconstructor(channels: number, capacity: number) {\n\t\t// Store the current state in a separate ring buffer.\n\t\tthis.state = new SharedArrayBuffer(STATE.LENGTH * Int32Array.BYTES_PER_ELEMENT)\n\n\t\t// Create a buffer for each audio channel\n\t\tthis.channels = []\n\t\tfor (let i = 0; i < channels; i += 1) {\n\t\t\tconst buffer = new SharedArrayBuffer(capacity * Float32Array.BYTES_PER_ELEMENT)\n\t\t\tthis.channels.push(buffer)\n\t\t}\n\n\t\tthis.capacity = capacity\n\t}\n}\n\nexport class Ring {\n\tstate: Int32Array\n\tchannels: Float32Array[]\n\tcapacity: number\n\n\tconstructor(shared: RingShared) {\n\t\tthis.state = new Int32Array(shared.state)\n\n\t\tthis.channels = []\n\t\tfor (const channel of shared.channels) {\n\t\t\tthis.channels.push(new Float32Array(channel))\n\t\t}\n\n\t\tthis.capacity = shared.capacity\n\t}\n\n\t// Write samples for single audio frame, returning the total number written.\n\twrite(frame: Frame): number {\n\t\tconst readPos = Atomics.load(this.state, STATE.READ_POS)\n\t\tconst writePos = Atomics.load(this.state, STATE.WRITE_POS)\n\n\t\tconst startPos = writePos\n\t\tlet endPos = writePos + frame.numberOfFrames\n\n\t\tif (endPos > readPos + this.capacity) {\n\t\t\tendPos = readPos + this.capacity\n\t\t\tif (endPos <= startPos) {\n\t\t\t\t// No space to write\n\t\t\t\treturn 0\n\t\t\t}\n\t\t}\n\n\t\tconst startIndex = startPos % this.capacity\n\t\tconst endIndex = endPos % this.capacity\n\n\t\t// Loop over each channel\n\t\tfor (let i = 0; i < this.channels.length; i += 1) {\n\t\t\tconst channel = this.channels[i]\n\n\t\t\t// If the AudioData doesn't have enough channels, duplicate it.\n\t\t\tconst planeIndex = Math.min(i, frame.numberOfChannels - 1)\n\n\t\t\tif (startIndex < endIndex) {\n\t\t\t\t// One continuous range to copy.\n\t\t\t\tconst full = channel.subarray(startIndex, endIndex)\n\n\t\t\t\tframe.copyTo(full, {\n\t\t\t\t\tplaneIndex,\n\t\t\t\t\tframeCount: endIndex - startIndex,\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tconst first = channel.subarray(startIndex)\n\t\t\t\tconst second = channel.subarray(0, endIndex)\n\n\t\t\t\tframe.copyTo(first, {\n\t\t\t\t\tplaneIndex,\n\t\t\t\t\tframeCount: first.length,\n\t\t\t\t})\n\n\t\t\t\t// We need this conditional when startIndex == 0 and endIndex == 0\n\t\t\t\t// When capacity=4410 and frameCount=1024, this was happening 52s into the audio.\n\t\t\t\tif (second.length) {\n\t\t\t\t\tframe.copyTo(second, {\n\t\t\t\t\t\tplaneIndex,\n\t\t\t\t\t\tframeOffset: first.length,\n\t\t\t\t\t\tframeCount: second.length,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tAtomics.store(this.state, STATE.WRITE_POS, endPos)\n\n\t\treturn endPos - startPos\n\t}\n\n\tread(dst: Float32Array[]): number {\n\t\tconst readPos = Atomics.load(this.state, STATE.READ_POS)\n\t\tconst writePos = Atomics.load(this.state, STATE.WRITE_POS)\n\n\t\tconst startPos = readPos\n\t\tlet endPos = startPos + dst[0].length\n\n\t\tif (endPos > writePos) {\n\t\t\tendPos = writePos\n\t\t\tif (endPos <= startPos) {\n\t\t\t\t// Nothing to read\n\t\t\t\treturn 0\n\t\t\t}\n\t\t}\n\n\t\tconst startIndex = startPos % this.capacity\n\t\tconst endIndex = endPos % this.capacity\n\n\t\t// Loop over each channel\n\t\tfor (let i = 0; i < dst.length; i += 1) {\n\t\t\tif (i >= this.channels.length) {\n\t\t\t\t// ignore excess channels\n\t\t\t}\n\n\t\t\tconst input = this.channels[i]\n\t\t\tconst output = dst[i]\n\n\t\t\tif (startIndex < endIndex) {\n\t\t\t\tconst full = input.subarray(startIndex, endIndex)\n\t\t\t\toutput.set(full)\n\t\t\t} else {\n\t\t\t\tconst first = input.subarray(startIndex)\n\t\t\t\tconst second = input.subarray(0, endIndex)\n\n\t\t\t\toutput.set(first)\n\t\t\t\toutput.set(second, first.length)\n\t\t\t}\n\t\t}\n\n\t\tAtomics.store(this.state, STATE.READ_POS, endPos)\n\n\t\treturn endPos - startPos\n\t}\n\n\tclear() {\n\t\tconst pos = Atomics.load(this.state, STATE.WRITE_POS)\n\t\tAtomics.store(this.state, STATE.READ_POS, pos)\n\t}\n\n\tsize() {\n\t\t// TODO is this thread safe?\n\t\tconst readPos = Atomics.load(this.state, STATE.READ_POS)\n\t\tconst writePos = Atomics.load(this.state, STATE.WRITE_POS)\n\n\t\treturn writePos - readPos\n\t}\n}\n","import * as Message from \"./worker/message\"\nimport { Audio } from \"./audio\"\n\n// import WebWorker from 'web-worker:./Worker.ts';\nimport MediaWorker from \"web-worker:./worker/index.ts\"\n\nimport { RingShared } from \"../common/ring\"\nimport { Root, isAudioTrack } from \"../media/catalog\"\nimport { GroupHeader } from \"../transport/objects\"\n\nexport interface PlayerConfig {\n\tcanvas: OffscreenCanvas\n\tcatalog: Root\n}\n\n// This is a non-standard way of importing worklet/workers.\n// Unfortunately, it's the only option because of a Vite bug: https://github.com/vitejs/vite/issues/11823\n\n// Responsible for sending messages to the worker and worklet.\nexport default class Backend {\n\t// General worker\n\t#worker: Worker\n\n\t// The audio context, which must be created on the main thread.\n\t#audio?: Audio\n\n\tconstructor(config: PlayerConfig) {\n\t\t// TODO does this block the main thread? If so, make this async\n\t\tthis.#worker = new MediaWorker()\n\t\tthis.#worker.addEventListener(\"message\", this.on.bind(this))\n\n\t\tlet sampleRate: number | undefined\n\t\tlet channels: number | undefined\n\n\t\tfor (const track of config.catalog.tracks) {\n\t\t\tif (isAudioTrack(track)) {\n\t\t\t\tif (sampleRate && track.selectionParams.samplerate !== sampleRate) {\n\t\t\t\t\tthrow new Error(`TODO multiple audio tracks with different sample rates`)\n\t\t\t\t}\n\n\t\t\t\tsampleRate = track.selectionParams.samplerate\n\n\t\t\t\t// TODO properly handle weird channel configs\n\t\t\t\tchannels = Math.max(+track.selectionParams.channelConfig, channels ?? 0)\n\t\t\t}\n\t\t}\n\n\t\tconst msg: Message.Config = {}\n\n\t\t// Only configure audio is we have an audio track\n\t\tif (sampleRate && channels) {\n\t\t\tmsg.audio = {\n\t\t\t\tchannels: channels,\n\t\t\t\tsampleRate: sampleRate,\n\t\t\t\tring: new RingShared(2, sampleRate / 10), // 100ms\n\t\t\t}\n\n\t\t\tthis.#audio = new Audio(msg.audio)\n\t\t}\n\n\t\t// TODO only send the canvas if we have a video track\n\t\tmsg.video = {\n\t\t\tcanvas: config.canvas,\n\t\t}\n\n\t\tthis.send({ config: msg }, msg.video.canvas)\n\t}\n\n\tpause() {\n\t\tthis.send({ pause: true })\n\t}\n\n\tasync mute() {\n\t\tawait this.#audio?.context.suspend()\n\t}\n\n\tasync unmute() {\n\t\tawait this.#audio?.context.resume()\n\t}\n\n\tinit(init: Init) {\n\t\tthis.send({ init })\n\t}\n\n\tsegment(segment: Segment) {\n\t\tthis.send({ segment }, segment.stream)\n\t}\n\n\tasync close() {\n\t\tthis.#worker.terminate()\n\t\tawait this.#audio?.context.close()\n\t}\n\n\t// Enforce we're sending valid types to the worker\n\tprivate send(msg: Message.ToWorker, ...transfer: Transferable[]) {\n\t\t//console.log(\"sent message from main to worker\", msg)\n\t\tthis.#worker.postMessage(msg, transfer)\n\t}\n\n\tprivate on(e: MessageEvent) {\n\t\tconst msg = e.data as Message.FromWorker\n\n\t\t// Don't print the verbose timeline message.\n\t\tif (!msg.timeline) {\n\t\t\t//console.log(\"received message from worker to main\", msg)\n\t\t}\n\t}\n}\n\nexport interface Init {\n\tname: string // name of the init track\n\tdata: Uint8Array\n}\n\nexport interface Segment {\n\tinit: string // name of the init track\n\tkind: \"audio\" | \"video\"\n\theader: GroupHeader\n\tbuffer: Uint8Array\n\tstream: ReadableStream<Uint8Array>\n}\n","const MAX_U6 = Math.pow(2, 6) - 1\nconst MAX_U14 = Math.pow(2, 14) - 1\nconst MAX_U30 = Math.pow(2, 30) - 1\nconst MAX_U31 = Math.pow(2, 31) - 1\nconst MAX_U53 = Number.MAX_SAFE_INTEGER\nconst MAX_U62: bigint = 2n ** 62n - 1n\n\n// Reader wraps a stream and provides convience methods for reading pieces from a stream\n// Unfortunately we can't use a BYOB reader because it's not supported with WebTransport+WebWorkers yet.\nexport class Reader {\n\t#buffer: Uint8Array\n\t#stream: ReadableStream<Uint8Array>\n\t#reader: ReadableStreamDefaultReader<Uint8Array>\n\n\tconstructor(buffer: Uint8Array, stream: ReadableStream<Uint8Array>) {\n\t\tthis.#buffer = buffer\n\t\tthis.#stream = stream\n\t\tthis.#reader = this.#stream.getReader()\n\t}\n\n\t// Adds more data to the buffer, returning true if more data was added.\n\tasync #fill(): Promise<boolean> {\n\t\tconst result = await this.#reader.read()\n\t\tif (result.done) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst buffer = new Uint8Array(result.value)\n\n\t\tif (this.#buffer.byteLength == 0) {\n\t\t\tthis.#buffer = buffer\n\t\t} else {\n\t\t\tconst temp = new Uint8Array(this.#buffer.byteLength + buffer.byteLength)\n\t\t\ttemp.set(this.#buffer)\n\t\t\ttemp.set(buffer, this.#buffer.byteLength)\n\t\t\tthis.#buffer = temp\n\t\t}\n\n\t\treturn true\n\t}\n\n\t// Add more data to the buffer until it's at least size bytes.\n\tasync #fillTo(size: number) {\n\t\twhile (this.#buffer.byteLength < size) {\n\t\t\tif (!(await this.#fill())) {\n\t\t\t\tthrow new Error(\"unexpected end of stream\")\n\t\t\t}\n\t\t}\n\t}\n\n\t// Consumes the first size bytes of the buffer.\n\t#slice(size: number): Uint8Array {\n\t\tconst result = new Uint8Array(this.#buffer.buffer, this.#buffer.byteOffset, size)\n\t\tthis.#buffer = new Uint8Array(this.#buffer.buffer, this.#buffer.byteOffset + size)\n\n\t\treturn result\n\t}\n\n\tasync read(size: number): Promise<Uint8Array> {\n\t\tif (size == 0) return new Uint8Array()\n\n\t\tawait this.#fillTo(size)\n\t\treturn this.#slice(size)\n\t}\n\n\tasync readAll(): Promise<Uint8Array> {\n\t\t// eslint-disable-next-line no-empty\n\t\twhile (await this.#fill()) {}\n\t\treturn this.#slice(this.#buffer.byteLength)\n\t}\n\n\tasync string(maxLength?: number): Promise<string> {\n\t\tconst length = await this.u53()\n\t\tif (maxLength !== undefined && length > maxLength) {\n\t\t\tthrow new Error(`string length ${length} exceeds max length ${maxLength}`)\n\t\t}\n\n\t\tconst buffer = await this.read(length)\n\t\treturn new TextDecoder().decode(buffer)\n\t}\n\n\tasync u8(): Promise<number> {\n\t\tawait this.#fillTo(1)\n\t\treturn this.#slice(1)[0]\n\t}\n\n\t// Returns a Number using 53-bits, the max Javascript can use for integer math\n\tasync u53(): Promise<number> {\n\t\tconst v = await this.u62()\n\t\tif (v > MAX_U53) {\n\t\t\tthrow new Error(\"value larger than 53-bits; use v62 instead\")\n\t\t}\n\n\t\treturn Number(v)\n\t}\n\n\t// NOTE: Returns a bigint instead of a number since it may be larger than 53-bits\n\tasync u62(): Promise<bigint> {\n\t\tawait this.#fillTo(1)\n\t\tconst size = (this.#buffer[0] & 0xc0) >> 6\n\n\t\tif (size == 0) {\n\t\t\tconst first = this.#slice(1)[0]\n\t\t\treturn BigInt(first) & 0x3fn\n\t\t} else if (size == 1) {\n\t\t\tawait this.#fillTo(2)\n\t\t\tconst slice = this.#slice(2)\n\t\t\tconst view = new DataView(slice.buffer, slice.byteOffset, slice.byteLength)\n\n\t\t\treturn BigInt(view.getInt16(0)) & 0x3fffn\n\t\t} else if (size == 2) {\n\t\t\tawait this.#fillTo(4)\n\t\t\tconst slice = this.#slice(4)\n\t\t\tconst view = new DataView(slice.buffer, slice.byteOffset, slice.byteLength)\n\n\t\t\treturn BigInt(view.getUint32(0)) & 0x3fffffffn\n\t\t} else if (size == 3) {\n\t\t\tawait this.#fillTo(8)\n\t\t\tconst slice = this.#slice(8)\n\t\t\tconst view = new DataView(slice.buffer, slice.byteOffset, slice.byteLength)\n\n\t\t\treturn view.getBigUint64(0) & 0x3fffffffffffffffn\n\t\t} else {\n\t\t\tthrow new Error(\"impossible\")\n\t\t}\n\t}\n\n\tasync done(): Promise<boolean> {\n\t\tif (this.#buffer.byteLength > 0) return false\n\t\treturn !(await this.#fill())\n\t}\n\n\tasync close() {\n\t\tthis.#reader.releaseLock()\n\t\tawait this.#stream.cancel()\n\t}\n\n\trelease(): [Uint8Array, ReadableStream<Uint8Array>] {\n\t\tthis.#reader.releaseLock()\n\t\treturn [this.#buffer, this.#stream]\n\t}\n}\n\n// Writer wraps a stream and writes chunks of data\nexport class Writer {\n\t#scratch: Uint8Array\n\t#writer: WritableStreamDefaultWriter<Uint8Array>\n\t#stream: WritableStream<Uint8Array>\n\n\tconstructor(stream: WritableStream<Uint8Array>) {\n\t\tthis.#stream = stream\n\t\tthis.#scratch = new Uint8Array(8)\n\t\tthis.#writer = this.#stream.getWriter()\n\t}\n\n\tasync u8(v: number) {\n\t\tawait this.write(setUint8(this.#scratch, v))\n\t}\n\n\tasync i32(v: number) {\n\t\tif (Math.abs(v) > MAX_U31) {\n\t\t\tthrow new Error(`overflow, value larger than 32-bits: ${v}`)\n\t\t}\n\n\t\t// We don't use a VarInt, so it always takes 4 bytes.\n\t\t// This could be improved but nothing is standardized yet.\n\t\tawait this.write(setInt32(this.#scratch, v))\n\t}\n\n\tasync u53(v: number) {\n\t\tif (v < 0) {\n\t\t\tthrow new Error(`underflow, value is negative: ${v}`)\n\t\t} else if (v > MAX_U53) {\n\t\t\tthrow new Error(`overflow, value larger than 53-bits: ${v}`)\n\t\t}\n\n\t\tawait this.write(setVint53(this.#scratch, v))\n\t}\n\n\tasync u62(v: bigint) {\n\t\tif (v < 0) {\n\t\t\tthrow new Error(`underflow, value is negative: ${v}`)\n\t\t} else if (v >= MAX_U62) {\n\t\t\tthrow new Error(`overflow, value larger than 62-bits: ${v}`)\n\t\t}\n\n\t\tawait this.write(setVint62(this.#scratch, v))\n\t}\n\n\tasync write(v: Uint8Array) {\n\t\tawait this.#writer.write(v)\n\t}\n\n\tasync string(str: string) {\n\t\tconst data = new TextEncoder().encode(str)\n\t\tawait this.u53(data.byteLength)\n\t\tawait this.write(data)\n\t}\n\n\tasync close() {\n\t\tthis.#writer.releaseLock()\n\t\tawait this.#stream.close()\n\t}\n\n\trelease(): WritableStream<Uint8Array> {\n\t\tthis.#writer.releaseLock()\n\t\treturn this.#stream\n\t}\n}\n\nfunction setUint8(dst: Uint8Array, v: number): Uint8Array {\n\tdst[0] = v\n\treturn dst.slice(0, 1)\n}\n\nfunction setUint16(dst: Uint8Array, v: number): Uint8Array {\n\tconst view = new DataView(dst.buffer, dst.byteOffset, 2)\n\tview.setUint16(0, v)\n\n\treturn new Uint8Array(view.buffer, view.byteOffset, view.byteLength)\n}\n\nfunction setInt32(dst: Uint8Array, v: number): Uint8Array {\n\tconst view = new DataView(dst.buffer, dst.byteOffset, 4)\n\tview.setInt32(0, v)\n\n\treturn new Uint8Array(view.buffer, view.byteOffset, view.byteLength)\n}\n\nfunction setUint32(dst: Uint8Array, v: number): Uint8Array {\n\tconst view = new DataView(dst.buffer, dst.byteOffset, 4)\n\tview.setUint32(0, v)\n\n\treturn new Uint8Array(view.buffer, view.byteOffset, view.byteLength)\n}\n\nfunction setVint53(dst: Uint8Array, v: number): Uint8Array {\n\tif (v <= MAX_U6) {\n\t\treturn setUint8(dst, v)\n\t} else if (v <= MAX_U14) {\n\t\treturn setUint16(dst, v | 0x4000)\n\t} else if (v <= MAX_U30) {\n\t\treturn setUint32(dst, v | 0x80000000)\n\t} else if (v <= MAX_U53) {\n\t\treturn setUint64(dst, BigInt(v) | 0xc000000000000000n)\n\t} else {\n\t\tthrow new Error(`overflow, value larger than 53-bits: ${v}`)\n\t}\n}\n\nfunction setVint62(dst: Uint8Array, v: bigint): Uint8Array {\n\tif (v < MAX_U6) {\n\t\treturn setUint8(dst, Number(v))\n\t} else if (v < MAX_U14) {\n\t\treturn setUint16(dst, Number(v) | 0x4000)\n\t} else if (v <= MAX_U30) {\n\t\treturn setUint32(dst, Number(v) | 0x80000000)\n\t} else if (v <= MAX_U62) {\n\t\treturn setUint64(dst, BigInt(v) | 0xc000000000000000n)\n\t} else {\n\t\tthrow new Error(`overflow, value larger than 62-bits: ${v}`)\n\t}\n}\n\nfunction setUint64(dst: Uint8Array, v: bigint): Uint8Array {\n\tconst view = new DataView(dst.buffer, dst.byteOffset, 8)\n\tview.setBigUint64(0, v)\n\n\treturn new Uint8Array(view.buffer, view.byteOffset, view.byteLength)\n}\n","import { Reader, Writer } from \"./stream\"\n\nexport type Message = Client | Server\nexport type Role = \"publisher\" | \"subscriber\" | \"both\"\n\nexport enum Version {\n\tDRAFT_00 = 0xff000000,\n\tDRAFT_01 = 0xff000001,\n\tDRAFT_02 = 0xff000002,\n\tDRAFT_03 = 0xff000003,\n\tDRAFT_04 = 0xff000004,\n\tDRAFT_05 = 0xff000005,\n\tKIXEL_00 = 0xbad00,\n\tKIXEL_01 = 0xbad01,\n}\n\n// NOTE: These are forked from moq-transport-00.\n//   1. messages lack a sized length\n//   2. parameters are not optional and written in order (role + path)\n//   3. role indicates local support only, not remote support\n\nexport interface Client {\n\tversions: Version[]\n\trole: Role\n\tparams?: Parameters\n}\n\nexport interface Server {\n\tversion: Version\n\tparams?: Parameters\n}\n\nexport class Stream {\n\trecv: Decoder\n\tsend: Encoder\n\n\tconstructor(r: Reader, w: Writer) {\n\t\tthis.recv = new Decoder(r)\n\t\tthis.send = new Encoder(w)\n\t}\n}\n\nexport type Parameters = Map<bigint, Uint8Array>\n\nexport class Decoder {\n\tr: Reader\n\n\tconstructor(r: Reader) {\n\t\tthis.r = r\n\t}\n\n\tasync client(): Promise<Client> {\n\t\tconst type = await this.r.u53()\n\t\tif (type !== 0x40) throw new Error(`client SETUP type must be 0x40, got ${type}`)\n\n\t\tconst count = await this.r.u53()\n\n\t\tconst versions = []\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst version = await this.r.u53()\n\t\t\tversions.push(version)\n\t\t}\n\n\t\tconst params = await this.parameters()\n\t\tconst role = this.role(params?.get(0n))\n\n\t\treturn {\n\t\t\tversions,\n\t\t\trole,\n\t\t\tparams,\n\t\t}\n\t}\n\n\tasync server(): Promise<Server> {\n\t\tconst type = await this.r.u53()\n\t\tif (type !== 0x41) throw new Error(`server SETUP type must be 0x41, got ${type}`)\n\n\t\tconst version = await this.r.u53()\n\t\tconst params = await this.parameters()\n\n\t\treturn {\n\t\t\tversion,\n\t\t\tparams,\n\t\t}\n\t}\n\n\tprivate async parameters(): Promise<Parameters | undefined> {\n\t\tconst count = await this.r.u53()\n\t\tif (count == 0) return undefined\n\n\t\tconst params = new Map<bigint, Uint8Array>()\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst id = await this.r.u62()\n\t\t\tconst size = await this.r.u53()\n\t\t\tconst value = await this.r.read(size)\n\n\t\t\tif (params.has(id)) {\n\t\t\t\tthrow new Error(`duplicate parameter id: ${id}`)\n\t\t\t}\n\n\t\t\tparams.set(id, value)\n\t\t}\n\n\t\treturn params\n\t}\n\n\trole(raw: Uint8Array | undefined): Role {\n\t\tif (!raw) throw new Error(\"missing role parameter\")\n\t\tif (raw.length != 1) throw new Error(\"multi-byte varint not supported\")\n\n\t\tswitch (raw[0]) {\n\t\t\tcase 1:\n\t\t\t\treturn \"publisher\"\n\t\t\tcase 2:\n\t\t\t\treturn \"subscriber\"\n\t\t\tcase 3:\n\t\t\t\treturn \"both\"\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`invalid role: ${raw[0]}`)\n\t\t}\n\t}\n}\n\nexport class Encoder {\n\tw: Writer\n\n\tconstructor(w: Writer) {\n\t\tthis.w = w\n\t}\n\n\tasync client(c: Client) {\n\t\tawait this.w.u53(0x40)\n\t\tawait this.w.u53(c.versions.length)\n\t\tfor (const v of c.versions) {\n\t\t\tawait this.w.u53(v)\n\t\t}\n\n\t\t// I hate it\n\t\tconst params = c.params ?? new Map()\n\t\tparams.set(0n, new Uint8Array([c.role == \"publisher\" ? 1 : c.role == \"subscriber\" ? 2 : 3]))\n\t\tawait this.parameters(params)\n\t}\n\n\tasync server(s: Server) {\n\t\tawait this.w.u53(0x41)\n\t\tawait this.w.u53(s.version)\n\t\tawait this.parameters(s.params)\n\t}\n\n\tprivate async parameters(p: Parameters | undefined) {\n\t\tif (!p) {\n\t\t\tawait this.w.u8(0)\n\t\t\treturn\n\t\t}\n\n\t\tawait this.w.u53(p.size)\n\t\tfor (const [id, value] of p) {\n\t\t\tawait this.w.u62(id)\n\t\t\tawait this.w.u53(value.length)\n\t\t\tawait this.w.write(value)\n\t\t}\n\t}\n}\n","import { Reader, Writer } from \"./stream\"\n\nexport type Message = Subscriber | Publisher\n\n// Sent by subscriber\nexport type Subscriber = Subscribe | Unsubscribe | AnnounceOk | AnnounceError\n\nexport function isSubscriber(m: Message): m is Subscriber {\n\treturn (\n\t\tm.kind == Msg.Subscribe || m.kind == Msg.Unsubscribe || m.kind == Msg.AnnounceOk || m.kind == Msg.AnnounceError\n\t)\n}\n\n// Sent by publisher\nexport type Publisher = SubscribeOk | SubscribeError | SubscribeDone | Announce | Unannounce\n\nexport function isPublisher(m: Message): m is Publisher {\n\treturn (\n\t\tm.kind == Msg.SubscribeOk ||\n\t\tm.kind == Msg.SubscribeError ||\n\t\tm.kind == Msg.SubscribeDone ||\n\t\tm.kind == Msg.Announce ||\n\t\tm.kind == Msg.Unannounce\n\t)\n}\n\n// I wish we didn't have to split Msg and Id into separate enums.\n// However using the string in the message makes it easier to debug.\n// We'll take the tiny performance hit until I'm better at Typescript.\nexport enum Msg {\n\t// NOTE: object and setup are in other modules\n\tSubscribe = \"subscribe\",\n\tSubscribeOk = \"subscribe_ok\",\n\tSubscribeError = \"subscribe_error\",\n\tSubscribeDone = \"subscribe_done\",\n\tUnsubscribe = \"unsubscribe\",\n\tAnnounce = \"announce\",\n\tAnnounceOk = \"announce_ok\",\n\tAnnounceError = \"announce_error\",\n\tUnannounce = \"unannounce\",\n\tGoAway = \"go_away\",\n}\n\nenum Id {\n\t// NOTE: object and setup are in other modules\n\t// Object = 0,\n\t// Setup = 1,\n\n\tSubscribe = 0x3,\n\tSubscribeOk = 0x4,\n\tSubscribeError = 0x5,\n\tSubscribeDone = 0xb,\n\tUnsubscribe = 0xa,\n\tAnnounce = 0x6,\n\tAnnounceOk = 0x7,\n\tAnnounceError = 0x8,\n\tUnannounce = 0x9,\n\tGoAway = 0x10,\n}\n\nexport interface Subscribe {\n\tkind: Msg.Subscribe\n\n\tid: bigint\n\ttrackId: bigint\n\tnamespace: string\n\tname: string\n\tsubscriber_priority: number\n\tgroup_order: GroupOrder\n\n\tlocation: Location\n\n\tparams?: Parameters\n}\n\nexport enum GroupOrder {\n\tPublisher = 0x0,\n\tAscending = 0x1,\n\tDescending = 0x2,\n}\n\nexport type Location = LatestGroup | LatestObject | AbsoluteStart | AbsoluteRange\n\nexport interface LatestGroup {\n\tmode: \"latest_group\"\n}\n\nexport interface LatestObject {\n\tmode: \"latest_object\"\n}\n\nexport interface AbsoluteStart {\n\tmode: \"absolute_start\"\n\tstart_group: number\n\tstart_object: number\n}\n\nexport interface AbsoluteRange {\n\tmode: \"absolute_range\"\n\tstart_group: number\n\tstart_object: number\n\tend_group: number\n\tend_object: number\n}\n\nexport type Parameters = Map<bigint, Uint8Array>\n\nexport interface SubscribeOk {\n\tkind: Msg.SubscribeOk\n\tid: bigint\n\texpires: bigint\n\tgroup_order: GroupOrder\n\tlatest?: [number, number]\n}\n\nexport interface SubscribeDone {\n\tkind: Msg.SubscribeDone\n\tid: bigint\n\tcode: bigint\n\treason: string\n\tfinal?: [number, number]\n}\n\nexport interface SubscribeError {\n\tkind: Msg.SubscribeError\n\tid: bigint\n\tcode: bigint\n\treason: string\n}\n\nexport interface Unsubscribe {\n\tkind: Msg.Unsubscribe\n\tid: bigint\n}\n\nexport interface Announce {\n\tkind: Msg.Announce\n\tnamespace: string\n\tparams?: Parameters\n}\n\nexport interface AnnounceOk {\n\tkind: Msg.AnnounceOk\n\tnamespace: string\n}\n\nexport interface AnnounceError {\n\tkind: Msg.AnnounceError\n\tnamespace: string\n\tcode: bigint\n\treason: string\n}\n\nexport interface Unannounce {\n\tkind: Msg.Unannounce\n\tnamespace: string\n}\n\nexport class Stream {\n\tprivate decoder: Decoder\n\tprivate encoder: Encoder\n\n\t#mutex = Promise.resolve()\n\n\tconstructor(r: Reader, w: Writer) {\n\t\tthis.decoder = new Decoder(r)\n\t\tthis.encoder = new Encoder(w)\n\t}\n\n\t// Will error if two messages are read at once.\n\tasync recv(): Promise<Message> {\n\t\tconst msg = await this.decoder.message()\n\t\tconsole.log(\"received message\", msg)\n\t\treturn msg\n\t}\n\n\tasync send(msg: Message) {\n\t\tconst unlock = await this.#lock()\n\t\ttry {\n\t\t\tconsole.log(\"sending message\", msg)\n\t\t\tawait this.encoder.message(msg)\n\t\t} finally {\n\t\t\tunlock()\n\t\t}\n\t}\n\n\tasync #lock() {\n\t\t// Make a new promise that we can resolve later.\n\t\tlet done: () => void\n\t\tconst p = new Promise<void>((resolve) => {\n\t\t\tdone = () => resolve()\n\t\t})\n\n\t\t// Wait until the previous lock is done, then resolve our our lock.\n\t\tconst lock = this.#mutex.then(() => done)\n\n\t\t// Save our lock as the next lock.\n\t\tthis.#mutex = p\n\n\t\t// Return the lock.\n\t\treturn lock\n\t}\n}\n\nexport class Decoder {\n\tr: Reader\n\n\tconstructor(r: Reader) {\n\t\tthis.r = r\n\t}\n\n\tprivate async msg(): Promise<Msg> {\n\t\tconst t = await this.r.u53()\n\t\tswitch (t) {\n\t\t\tcase Id.Subscribe:\n\t\t\t\treturn Msg.Subscribe\n\t\t\tcase Id.SubscribeOk:\n\t\t\t\treturn Msg.SubscribeOk\n\t\t\tcase Id.SubscribeDone:\n\t\t\t\treturn Msg.SubscribeDone\n\t\t\tcase Id.SubscribeError:\n\t\t\t\treturn Msg.SubscribeError\n\t\t\tcase Id.Unsubscribe:\n\t\t\t\treturn Msg.Unsubscribe\n\t\t\tcase Id.Announce:\n\t\t\t\treturn Msg.Announce\n\t\t\tcase Id.AnnounceOk:\n\t\t\t\treturn Msg.AnnounceOk\n\t\t\tcase Id.AnnounceError:\n\t\t\t\treturn Msg.AnnounceError\n\t\t\tcase Id.Unannounce:\n\t\t\t\treturn Msg.Unannounce\n\t\t\tcase Id.GoAway:\n\t\t\t\treturn Msg.GoAway\n\t\t}\n\n\t\tthrow new Error(`unknown control message type: ${t}`)\n\t}\n\n\tasync message(): Promise<Message> {\n\t\tconst t = await this.msg()\n\t\tswitch (t) {\n\t\t\tcase Msg.Subscribe:\n\t\t\t\treturn this.subscribe()\n\t\t\tcase Msg.SubscribeOk:\n\t\t\t\treturn this.subscribe_ok()\n\t\t\tcase Msg.SubscribeError:\n\t\t\t\treturn this.subscribe_error()\n\t\t\tcase Msg.SubscribeDone:\n\t\t\t\treturn this.subscribe_done()\n\t\t\tcase Msg.Unsubscribe:\n\t\t\t\treturn this.unsubscribe()\n\t\t\tcase Msg.Announce:\n\t\t\t\treturn this.announce()\n\t\t\tcase Msg.AnnounceOk:\n\t\t\t\treturn this.announce_ok()\n\t\t\tcase Msg.Unannounce:\n\t\t\t\treturn this.unannounce()\n\t\t\tcase Msg.AnnounceError:\n\t\t\t\treturn this.announce_error()\n\t\t\tcase Msg.GoAway:\n\t\t\t\tthrow new Error(\"TODO: implement go away\")\n\t\t}\n\t}\n\n\tprivate async subscribe(): Promise<Subscribe> {\n\t\treturn {\n\t\t\tkind: Msg.Subscribe,\n\t\t\tid: await this.r.u62(),\n\t\t\ttrackId: await this.r.u62(),\n\t\t\tnamespace: await this.r.string(),\n\t\t\tname: await this.r.string(),\n\t\t\tsubscriber_priority: await this.r.u8(),\n\t\t\tgroup_order: await this.decodeGroupOrder(),\n\t\t\tlocation: await this.location(),\n\t\t\tparams: await this.parameters(),\n\t\t}\n\t}\n\n\tprivate async decodeGroupOrder(): Promise<GroupOrder> {\n\t\tconst orderCode = await this.r.u8()\n\t\tswitch (orderCode) {\n\t\t\tcase 0:\n\t\t\t\treturn GroupOrder.Publisher\n\t\t\tcase 1:\n\t\t\t\treturn GroupOrder.Ascending\n\t\t\tcase 2:\n\t\t\t\treturn GroupOrder.Descending\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid GroupOrder value: ${orderCode}`)\n\t\t}\n\t}\n\n\tprivate async location(): Promise<Location> {\n\t\tconst mode = await this.r.u62()\n\t\tif (mode == 1n) {\n\t\t\treturn {\n\t\t\t\tmode: \"latest_group\",\n\t\t\t}\n\t\t} else if (mode == 2n) {\n\t\t\treturn {\n\t\t\t\tmode: \"latest_object\",\n\t\t\t}\n\t\t} else if (mode == 3n) {\n\t\t\treturn {\n\t\t\t\tmode: \"absolute_start\",\n\t\t\t\tstart_group: await this.r.u53(),\n\t\t\t\tstart_object: await this.r.u53(),\n\t\t\t}\n\t\t} else if (mode == 4n) {\n\t\t\treturn {\n\t\t\t\tmode: \"absolute_range\",\n\t\t\t\tstart_group: await this.r.u53(),\n\t\t\t\tstart_object: await this.r.u53(),\n\t\t\t\tend_group: await this.r.u53(),\n\t\t\t\tend_object: await this.r.u53(),\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(`invalid filter type: ${mode}`)\n\t\t}\n\t}\n\n\tprivate async parameters(): Promise<Parameters | undefined> {\n\t\tconst count = await this.r.u53()\n\t\tif (count == 0) return undefined\n\n\t\tconst params = new Map<bigint, Uint8Array>()\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst id = await this.r.u62()\n\t\t\tconst size = await this.r.u53()\n\t\t\tconst value = await this.r.read(size)\n\n\t\t\tif (params.has(id)) {\n\t\t\t\tthrow new Error(`duplicate parameter id: ${id}`)\n\t\t\t}\n\n\t\t\tparams.set(id, value)\n\t\t}\n\n\t\treturn params\n\t}\n\n\tprivate async subscribe_ok(): Promise<SubscribeOk> {\n\t\tconst id = await this.r.u62()\n\t\tconst expires = await this.r.u62()\n\n\t\tconst group_order = await this.decodeGroupOrder()\n\t\tlet latest: [number, number] | undefined\n\n\t\tconst flag = await this.r.u8()\n\t\tif (flag === 1) {\n\t\t\tlatest = [await this.r.u53(), await this.r.u53()]\n\t\t} else if (flag !== 0) {\n\t\t\tthrow new Error(`invalid final flag: ${flag}`)\n\t\t}\n\n\t\treturn {\n\t\t\tkind: Msg.SubscribeOk,\n\t\t\tid,\n\t\t\texpires,\n\t\t\tgroup_order,\n\t\t\tlatest,\n\t\t}\n\t}\n\n\tprivate async subscribe_done(): Promise<SubscribeDone> {\n\t\tconst id = await this.r.u62()\n\t\tconst code = await this.r.u62()\n\t\tconst reason = await this.r.string()\n\n\t\tlet final: [number, number] | undefined\n\n\t\tconst flag = await this.r.u8()\n\t\tif (flag === 1) {\n\t\t\tfinal = [await this.r.u53(), await this.r.u53()]\n\t\t} else if (flag !== 0) {\n\t\t\tthrow new Error(`invalid final flag: ${flag}`)\n\t\t}\n\n\t\treturn {\n\t\t\tkind: Msg.SubscribeDone,\n\t\t\tid,\n\t\t\tcode,\n\t\t\treason,\n\t\t\tfinal,\n\t\t}\n\t}\n\n\tprivate async subscribe_error(): Promise<SubscribeError> {\n\t\treturn {\n\t\t\tkind: Msg.SubscribeError,\n\t\t\tid: await this.r.u62(),\n\t\t\tcode: await this.r.u62(),\n\t\t\treason: await this.r.string(),\n\t\t}\n\t}\n\n\tprivate async unsubscribe(): Promise<Unsubscribe> {\n\t\treturn {\n\t\t\tkind: Msg.Unsubscribe,\n\t\t\tid: await this.r.u62(),\n\t\t}\n\t}\n\n\tprivate async announce(): Promise<Announce> {\n\t\tconst namespace = await this.r.string()\n\n\t\treturn {\n\t\t\tkind: Msg.Announce,\n\t\t\tnamespace,\n\t\t\tparams: await this.parameters(),\n\t\t}\n\t}\n\n\tprivate async announce_ok(): Promise<AnnounceOk> {\n\t\treturn {\n\t\t\tkind: Msg.AnnounceOk,\n\t\t\tnamespace: await this.r.string(),\n\t\t}\n\t}\n\n\tprivate async announce_error(): Promise<AnnounceError> {\n\t\treturn {\n\t\t\tkind: Msg.AnnounceError,\n\t\t\tnamespace: await this.r.string(),\n\t\t\tcode: await this.r.u62(),\n\t\t\treason: await this.r.string(),\n\t\t}\n\t}\n\n\tprivate async unannounce(): Promise<Unannounce> {\n\t\treturn {\n\t\t\tkind: Msg.Unannounce,\n\t\t\tnamespace: await this.r.string(),\n\t\t}\n\t}\n}\n\nexport class Encoder {\n\tw: Writer\n\n\tconstructor(w: Writer) {\n\t\tthis.w = w\n\t}\n\n\tasync message(m: Message) {\n\t\tswitch (m.kind) {\n\t\t\tcase Msg.Subscribe:\n\t\t\t\treturn this.subscribe(m)\n\t\t\tcase Msg.SubscribeOk:\n\t\t\t\treturn this.subscribe_ok(m)\n\t\t\tcase Msg.SubscribeError:\n\t\t\t\treturn this.subscribe_error(m)\n\t\t\tcase Msg.SubscribeDone:\n\t\t\t\treturn this.subscribe_done(m)\n\t\t\tcase Msg.Unsubscribe:\n\t\t\t\treturn this.unsubscribe(m)\n\t\t\tcase Msg.Announce:\n\t\t\t\treturn this.announce(m)\n\t\t\tcase Msg.AnnounceOk:\n\t\t\t\treturn this.announce_ok(m)\n\t\t\tcase Msg.AnnounceError:\n\t\t\t\treturn this.announce_error(m)\n\t\t\tcase Msg.Unannounce:\n\t\t\t\treturn this.unannounce(m)\n\t\t}\n\t}\n\n\tasync subscribe(s: Subscribe) {\n\t\tawait this.w.u53(Id.Subscribe)\n\t\tawait this.w.u62(s.id)\n\t\tawait this.w.u62(s.trackId)\n\t\tawait this.w.string(s.namespace)\n\t\tawait this.w.string(s.name)\n\t\tawait this.w.u8(s.subscriber_priority ?? 127)\n\t\tawait this.encodeGroupOrder(s.group_order ?? GroupOrder.Publisher)\n\t\tawait this.location(s.location)\n\t\tawait this.parameters(s.params)\n\t}\n\n\tprivate async encodeGroupOrder(order: GroupOrder) {\n\t\tswitch (order) {\n\t\t\tcase GroupOrder.Publisher:\n\t\t\t\tawait this.w.u8(GroupOrder.Publisher)\n\t\t\t\tbreak\n\t\t\tcase GroupOrder.Ascending:\n\t\t\t\tawait this.w.u8(GroupOrder.Ascending)\n\t\t\t\tbreak\n\t\t\tcase GroupOrder.Descending:\n\t\t\t\tawait this.w.u8(GroupOrder.Descending)\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Invalid GroupOrder value\")\n\t\t}\n\t}\n\n\tprivate async location(l: Location) {\n\t\tswitch (l.mode) {\n\t\t\tcase \"latest_group\":\n\t\t\t\tawait this.w.u62(1n)\n\t\t\t\tbreak\n\t\t\tcase \"latest_object\":\n\t\t\t\tawait this.w.u62(2n)\n\t\t\t\tbreak\n\t\t\tcase \"absolute_start\":\n\t\t\t\tawait this.w.u62(3n)\n\t\t\t\tawait this.w.u53(l.start_group)\n\t\t\t\tawait this.w.u53(l.start_object)\n\t\t\t\tbreak\n\t\t\tcase \"absolute_range\":\n\t\t\t\tawait this.w.u62(3n)\n\t\t\t\tawait this.w.u53(l.start_group)\n\t\t\t\tawait this.w.u53(l.start_object)\n\t\t\t\tawait this.w.u53(l.end_group)\n\t\t\t\tawait this.w.u53(l.end_object)\n\t\t}\n\t}\n\n\tprivate async parameters(p: Parameters | undefined) {\n\t\tif (!p) {\n\t\t\tawait this.w.u8(0)\n\t\t\treturn\n\t\t}\n\n\t\tawait this.w.u53(p.size)\n\t\tfor (const [id, value] of p) {\n\t\t\tawait this.w.u62(id)\n\t\t\tawait this.w.u53(value.length)\n\t\t\tawait this.w.write(value)\n\t\t}\n\t}\n\n\tasync subscribe_ok(s: SubscribeOk) {\n\t\tawait this.w.u53(Id.SubscribeOk)\n\t\tawait this.w.u62(s.id)\n\t\tawait this.w.u62(s.expires)\n\n\t\tawait this.encodeGroupOrder(s.group_order)\n\t\tif (s.latest !== undefined) {\n\t\t\tawait this.w.u8(1)\n\t\t\tawait this.w.u53(s.latest[0])\n\t\t\tawait this.w.u53(s.latest[1])\n\t\t} else {\n\t\t\tawait this.w.u8(0)\n\t\t}\n\t}\n\n\tasync subscribe_done(s: SubscribeDone) {\n\t\tawait this.w.u53(Id.SubscribeDone)\n\t\tawait this.w.u62(s.id)\n\t\tawait this.w.u62(s.code)\n\t\tawait this.w.string(s.reason)\n\n\t\tif (s.final !== undefined) {\n\t\t\tawait this.w.u8(1)\n\t\t\tawait this.w.u53(s.final[0])\n\t\t\tawait this.w.u53(s.final[1])\n\t\t} else {\n\t\t\tawait this.w.u8(0)\n\t\t}\n\t}\n\n\tasync subscribe_error(s: SubscribeError) {\n\t\tawait this.w.u53(Id.SubscribeError)\n\t\tawait this.w.u62(s.id)\n\t}\n\n\tasync unsubscribe(s: Unsubscribe) {\n\t\tawait this.w.u53(Id.Unsubscribe)\n\t\tawait this.w.u62(s.id)\n\t}\n\n\tasync announce(a: Announce) {\n\t\tawait this.w.u53(Id.Announce)\n\t\tawait this.w.string(a.namespace)\n\t\tawait this.w.u53(0) // parameters\n\t}\n\n\tasync announce_ok(a: AnnounceOk) {\n\t\tawait this.w.u53(Id.AnnounceOk)\n\t\tawait this.w.string(a.namespace)\n\t}\n\n\tasync announce_error(a: AnnounceError) {\n\t\tawait this.w.u53(Id.AnnounceError)\n\t\tawait this.w.string(a.namespace)\n\t\tawait this.w.u62(a.code)\n\t\tawait this.w.string(a.reason)\n\t}\n\n\tasync unannounce(a: Unannounce) {\n\t\tawait this.w.u53(Id.Unannounce)\n\t\tawait this.w.string(a.namespace)\n\t}\n}\n","import { Reader, Writer } from \"./stream\"\nexport { Reader, Writer }\n\nexport enum StreamType {\n\tObject = 0x0,\n\tTrack = 0x50,\n\tGroup = 0x51,\n}\n\nexport enum Status {\n\tOBJECT_NULL = 1,\n\tGROUP_NULL = 2,\n\tGROUP_END = 3,\n\tTRACK_END = 4,\n}\n\nexport interface TrackHeader {\n\ttype: StreamType.Track\n\tsub: bigint\n\ttrack: bigint\n\tpublisher_priority: number // VarInt with a u32 maximum value\n}\n\nexport interface TrackChunk {\n\tgroup: number // The group sequence, as a number because 2^53 is enough.\n\tobject: number\n\tpayload: Uint8Array | Status\n}\n\nexport interface GroupHeader {\n\ttype: StreamType.Group\n\tsub: bigint\n\ttrack: bigint\n\tgroup: number // The group sequence, as a number because 2^53 is enough.\n\tpublisher_priority: number // VarInt with a u32 maximum value\n}\n\nexport interface GroupChunk {\n\tobject: number\n\tpayload: Uint8Array | Status\n}\n\nexport interface ObjectHeader {\n\ttype: StreamType.Object\n\tsub: bigint\n\ttrack: bigint\n\tgroup: number\n\tobject: number\n\tpublisher_priority: number\n\tstatus: number\n}\n\nexport interface ObjectChunk {\n\tpayload: Uint8Array\n}\n\ntype WriterType<T> = T extends TrackHeader\n\t? TrackWriter\n\t: T extends GroupHeader\n\t? GroupWriter\n\t: T extends ObjectHeader\n\t? ObjectWriter\n\t: never\n\nexport class Objects {\n\tprivate quic: WebTransport\n\n\tconstructor(quic: WebTransport) {\n\t\tthis.quic = quic\n\t}\n\n\tasync send<T extends TrackHeader | GroupHeader | ObjectHeader>(h: T): Promise<WriterType<T>> {\n\t\tconst stream = await this.quic.createUnidirectionalStream()\n\t\tconst w = new Writer(stream)\n\n\t\tawait w.u53(h.type)\n\t\tawait w.u62(h.sub)\n\t\tawait w.u62(h.track)\n\n\t\tlet res: WriterType<T>\n\n\t\tif (h.type == StreamType.Object) {\n\t\t\tawait w.u53(h.group)\n\t\t\tawait w.u53(h.object)\n\t\t\tawait w.u8(h.publisher_priority)\n\t\t\tawait w.u53(h.status)\n\n\t\t\tres = new ObjectWriter(h, w) as WriterType<T>\n\t\t} else if (h.type === StreamType.Group) {\n\t\t\tawait w.u53(h.group)\n\t\t\tawait w.u8(h.publisher_priority)\n\n\t\t\tres = new GroupWriter(h, w) as WriterType<T>\n\t\t} else if (h.type === StreamType.Track) {\n\t\t\tawait w.u8(h.publisher_priority)\n\n\t\t\tres = new TrackWriter(h, w) as WriterType<T>\n\t\t} else {\n\t\t\tthrow new Error(\"unknown header type\")\n\t\t}\n\n\t\t// console.trace(\"send object\", res.header)\n\n\t\treturn res\n\t}\n\n\tasync recv(): Promise<TrackReader | GroupReader | ObjectReader | undefined> {\n\t\tconst streams = this.quic.incomingUnidirectionalStreams.getReader()\n\n\t\tconst { value, done } = await streams.read()\n\t\tstreams.releaseLock()\n\n\t\tif (done) return\n\n\t\tconst r = new Reader(new Uint8Array(), value)\n\t\tconst type = (await r.u53()) as StreamType\n\t\tlet res: TrackReader | GroupReader | ObjectReader\n\n\t\tif (type == StreamType.Track) {\n\t\t\tconst h: TrackHeader = {\n\t\t\t\ttype,\n\t\t\t\tsub: await r.u62(),\n\t\t\t\ttrack: await r.u62(),\n\t\t\t\tpublisher_priority: await r.u8(),\n\t\t\t}\n\n\t\t\tres = new TrackReader(h, r)\n\t\t} else if (type == StreamType.Group) {\n\t\t\tconst h: GroupHeader = {\n\t\t\t\ttype,\n\t\t\t\tsub: await r.u62(),\n\t\t\t\ttrack: await r.u62(),\n\t\t\t\tgroup: await r.u53(),\n\t\t\t\tpublisher_priority: await r.u8(),\n\t\t\t}\n\t\t\tres = new GroupReader(h, r)\n\t\t} else if (type == StreamType.Object) {\n\t\t\tconst h = {\n\t\t\t\ttype,\n\t\t\t\tsub: await r.u62(),\n\t\t\t\ttrack: await r.u62(),\n\t\t\t\tgroup: await r.u53(),\n\t\t\t\tobject: await r.u53(),\n\t\t\t\tstatus: await r.u53(),\n\t\t\t\tpublisher_priority: await r.u8(),\n\t\t\t}\n\n\t\t\tres = new ObjectReader(h, r)\n\t\t} else {\n\t\t\tthrow new Error(\"unknown stream type\")\n\t\t}\n\n\t\t// console.trace(\"receive object\", res.header)\n\n\t\treturn res\n\t}\n}\n\nexport class TrackWriter {\n\tconstructor(\n\t\tpublic header: TrackHeader,\n\t\tpublic stream: Writer,\n\t) {}\n\n\tasync write(c: TrackChunk) {\n\t\tawait this.stream.u53(c.group)\n\t\tawait this.stream.u53(c.object)\n\n\t\tif (c.payload instanceof Uint8Array) {\n\t\t\tawait this.stream.u53(c.payload.byteLength)\n\t\t\tawait this.stream.write(c.payload)\n\t\t} else {\n\t\t\t// empty payload with status\n\t\t\tawait this.stream.u53(0)\n\t\t\tawait this.stream.u53(c.payload as number)\n\t\t}\n\t}\n\n\tasync close() {\n\t\tawait this.stream.close()\n\t}\n}\n\nexport class GroupWriter {\n\tconstructor(\n\t\tpublic header: GroupHeader,\n\t\tpublic stream: Writer,\n\t) {}\n\n\tasync write(c: GroupChunk) {\n\t\tawait this.stream.u53(c.object)\n\t\tif (c.payload instanceof Uint8Array) {\n\t\t\tawait this.stream.u53(c.payload.byteLength)\n\t\t\tawait this.stream.write(c.payload)\n\t\t} else {\n\t\t\tawait this.stream.u53(0)\n\t\t\tawait this.stream.u53(c.payload as number)\n\t\t}\n\t}\n\n\tasync close() {\n\t\tawait this.stream.close()\n\t}\n}\n\nexport class ObjectWriter {\n\tconstructor(\n\t\tpublic header: ObjectHeader,\n\t\tpublic stream: Writer,\n\t) {}\n\n\tasync write(c: ObjectChunk) {\n\t\tawait this.stream.write(c.payload)\n\t}\n\n\tasync close() {\n\t\tawait this.stream.close()\n\t}\n}\n\nexport class TrackReader {\n\tconstructor(\n\t\tpublic header: TrackHeader,\n\t\tpublic stream: Reader,\n\t) {}\n\n\tasync read(): Promise<TrackChunk | undefined> {\n\t\tif (await this.stream.done()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst group = await this.stream.u53()\n\t\tconst object = await this.stream.u53()\n\t\tconst size = await this.stream.u53()\n\n\t\tlet payload\n\t\tif (size == 0) {\n\t\t\tpayload = (await this.stream.u53()) as Status\n\t\t} else {\n\t\t\tpayload = await this.stream.read(size)\n\t\t}\n\n\t\treturn {\n\t\t\tgroup,\n\t\t\tobject,\n\t\t\tpayload,\n\t\t}\n\t}\n\n\tasync close() {\n\t\tawait this.stream.close()\n\t}\n}\n\nexport class GroupReader {\n\tconstructor(\n\t\tpublic header: GroupHeader,\n\t\tpublic stream: Reader,\n\t) {}\n\n\tasync read(): Promise<GroupChunk | undefined> {\n\t\tif (await this.stream.done()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst object = await this.stream.u53()\n\t\tconst size = await this.stream.u53()\n\n\t\tlet payload\n\t\tif (size == 0) {\n\t\t\tpayload = (await this.stream.u53()) as Status\n\t\t} else {\n\t\t\tpayload = await this.stream.read(size)\n\t\t}\n\n\t\treturn {\n\t\t\tobject,\n\t\t\tpayload,\n\t\t}\n\t}\n\n\tasync close() {\n\t\tawait this.stream.close()\n\t}\n}\n\nexport class ObjectReader {\n\tconstructor(\n\t\tpublic header: ObjectHeader,\n\t\tpublic stream: Reader,\n\t) {}\n\n\t// NOTE: Can only be called once.\n\tasync read(): Promise<ObjectChunk | undefined> {\n\t\tif (await this.stream.done()) {\n\t\t\treturn\n\t\t}\n\n\t\treturn {\n\t\t\tpayload: await this.stream.readAll(),\n\t\t}\n\t}\n\n\tasync close() {\n\t\tawait this.stream.close()\n\t}\n}\n","export class Deferred<T> {\n\tpromise: Promise<T>\n\tresolve!: (value: T | PromiseLike<T>) => void\n\treject!: (reason: any) => void\n\tpending = true\n\n\tconstructor() {\n\t\tthis.promise = new Promise((resolve, reject) => {\n\t\t\tthis.resolve = (value) => {\n\t\t\t\tthis.pending = false\n\t\t\t\tresolve(value)\n\t\t\t}\n\t\t\tthis.reject = (reason) => {\n\t\t\t\tthis.pending = false\n\t\t\t\treject(reason)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport type WatchNext<T> = [T, Promise<WatchNext<T>> | undefined]\n\nexport class Watch<T> {\n\t#current: WatchNext<T>\n\t#next = new Deferred<WatchNext<T>>()\n\n\tconstructor(init: T) {\n\t\tthis.#next = new Deferred<WatchNext<T>>()\n\t\tthis.#current = [init, this.#next.promise]\n\t}\n\n\tvalue(): WatchNext<T> {\n\t\treturn this.#current\n\t}\n\n\tupdate(v: T | ((v: T) => T)) {\n\t\tif (!this.#next.pending) {\n\t\t\tthrow new Error(\"already closed\")\n\t\t}\n\n\t\t// If we're given a function, call it with the current value\n\t\tif (v instanceof Function) {\n\t\t\tv = v(this.#current[0])\n\t\t}\n\n\t\tconst next = new Deferred<WatchNext<T>>()\n\t\tthis.#current = [v, next.promise]\n\t\tthis.#next.resolve(this.#current)\n\t\tthis.#next = next\n\t}\n\n\tclose() {\n\t\tthis.#current[1] = undefined\n\t\tthis.#next.resolve(this.#current)\n\t}\n}\n\n// Wakes up a multiple consumers.\nexport class Notify {\n\t#next = new Deferred<void>()\n\n\tasync wait() {\n\t\treturn this.#next.promise\n\t}\n\n\twake() {\n\t\tif (!this.#next.pending) {\n\t\t\tthrow new Error(\"closed\")\n\t\t}\n\n\t\tthis.#next.resolve()\n\t\tthis.#next = new Deferred<void>()\n\t}\n\n\tclose() {\n\t\tthis.#next.resolve()\n\t}\n}\n\n// Allows queuing N values, like a Channel.\nexport class Queue<T> {\n\t#stream: TransformStream<T, T>\n\t#closed = false\n\n\tconstructor(capacity = 1) {\n\t\tconst queue = new CountQueuingStrategy({ highWaterMark: capacity })\n\t\tthis.#stream = new TransformStream({}, undefined, queue)\n\t}\n\n\tasync push(v: T) {\n\t\tconst w = this.#stream.writable.getWriter()\n\t\tawait w.write(v)\n\t\tw.releaseLock()\n\t}\n\n\tasync next(): Promise<T | undefined> {\n\t\tconst r = this.#stream.readable.getReader()\n\t\tconst { value, done } = await r.read()\n\t\tr.releaseLock()\n\n\t\tif (done) return\n\t\treturn value\n\t}\n\n\tasync abort(err: Error) {\n\t\tif (this.#closed) return\n\t\tawait this.#stream.writable.abort(err)\n\t\tthis.#closed = true\n\t}\n\n\tasync close() {\n\t\tif (this.#closed) return\n\t\tawait this.#stream.writable.close()\n\t\tthis.#closed = true\n\t}\n\n\tclosed() {\n\t\treturn this.#closed\n\t}\n}\n","import * as Control from \"./control\"\nimport { Queue, Watch } from \"../common/async\"\nimport { Objects, GroupWriter, ObjectWriter, StreamType, TrackWriter } from \"./objects\"\n\nexport class Publisher {\n\t// Used to send control messages\n\t#control: Control.Stream\n\n\t// Use to send objects.\n\t#objects: Objects\n\n\t// Our announced tracks.\n\t#announce = new Map<string, AnnounceSend>()\n\n\t// Their subscribed tracks.\n\t#subscribe = new Map<bigint, SubscribeRecv>()\n\t#subscribeQueue = new Queue<SubscribeRecv>(Number.MAX_SAFE_INTEGER) // Unbounded queue in case there's no receiver\n\n\tconstructor(control: Control.Stream, objects: Objects) {\n\t\tthis.#control = control\n\t\tthis.#objects = objects\n\t}\n\n\t// Announce a track namespace.\n\tasync announce(namespace: string): Promise<AnnounceSend> {\n\t\tif (this.#announce.has(namespace)) {\n\t\t\tthrow new Error(`already announce: ${namespace}`)\n\t\t}\n\n\t\tconst announce = new AnnounceSend(this.#control, namespace)\n\t\tthis.#announce.set(namespace, announce)\n\n\t\tawait this.#control.send({\n\t\t\tkind: Control.Msg.Announce,\n\t\t\tnamespace,\n\t\t})\n\n\t\treturn announce\n\t}\n\n\t// Receive the next new subscription\n\tasync subscribed() {\n\t\treturn await this.#subscribeQueue.next()\n\t}\n\n\tasync recv(msg: Control.Subscriber) {\n\t\tif (msg.kind == Control.Msg.Subscribe) {\n\t\t\tawait this.recvSubscribe(msg)\n\t\t} else if (msg.kind == Control.Msg.Unsubscribe) {\n\t\t\tthis.recvUnsubscribe(msg)\n\t\t} else if (msg.kind == Control.Msg.AnnounceOk) {\n\t\t\tthis.recvAnnounceOk(msg)\n\t\t} else if (msg.kind == Control.Msg.AnnounceError) {\n\t\t\tthis.recvAnnounceError(msg)\n\t\t} else {\n\t\t\tthrow new Error(`unknown control message`) // impossible\n\t\t}\n\t}\n\n\trecvAnnounceOk(msg: Control.AnnounceOk) {\n\t\tconst announce = this.#announce.get(msg.namespace)\n\t\tif (!announce) {\n\t\t\tthrow new Error(`announce OK for unknown announce: ${msg.namespace}`)\n\t\t}\n\n\t\tannounce.onOk()\n\t}\n\n\trecvAnnounceError(msg: Control.AnnounceError) {\n\t\tconst announce = this.#announce.get(msg.namespace)\n\t\tif (!announce) {\n\t\t\t// TODO debug this\n\t\t\tconsole.warn(`announce error for unknown announce: ${msg.namespace}`)\n\t\t\treturn\n\t\t}\n\n\t\tannounce.onError(msg.code, msg.reason)\n\t}\n\n\tasync recvSubscribe(msg: Control.Subscribe) {\n\t\tif (this.#subscribe.has(msg.id)) {\n\t\t\tthrow new Error(`duplicate subscribe for id: ${msg.id}`)\n\t\t}\n\n\t\tconst subscribe = new SubscribeRecv(this.#control, this.#objects, msg)\n\t\tthis.#subscribe.set(msg.id, subscribe)\n\t\tawait this.#subscribeQueue.push(subscribe)\n\n\t\tawait this.#control.send({\n\t\t\tkind: Control.Msg.SubscribeOk,\n\t\t\tid: msg.id,\n\t\t\texpires: 0n,\n\t\t\tgroup_order: msg.group_order,\n\t\t})\n\t}\n\n\trecvUnsubscribe(_msg: Control.Unsubscribe) {\n\t\tthrow new Error(\"TODO unsubscribe\")\n\t}\n}\n\nexport class AnnounceSend {\n\t#control: Control.Stream\n\n\treadonly namespace: string\n\n\t// The current state, updated by control messages.\n\t#state = new Watch<\"init\" | \"ack\" | Error>(\"init\")\n\n\tconstructor(control: Control.Stream, namespace: string) {\n\t\tthis.#control = control\n\t\tthis.namespace = namespace\n\t}\n\n\tasync ok() {\n\t\tfor (;;) {\n\t\t\tconst [state, next] = this.#state.value()\n\t\t\tif (state === \"ack\") return\n\t\t\tif (state instanceof Error) throw state\n\t\t\tif (!next) throw new Error(\"closed\")\n\n\t\t\tawait next\n\t\t}\n\t}\n\n\tasync active() {\n\t\tfor (;;) {\n\t\t\tconst [state, next] = this.#state.value()\n\t\t\tif (state instanceof Error) throw state\n\t\t\tif (!next) return\n\n\t\t\tawait next\n\t\t}\n\t}\n\n\tasync close() {\n\t\t// TODO implement unsubscribe\n\t\t// await this.#inner.sendUnsubscribe()\n\t}\n\n\tclosed() {\n\t\tconst [state, next] = this.#state.value()\n\t\treturn state instanceof Error || next == undefined\n\t}\n\n\tonOk() {\n\t\tif (this.closed()) return\n\t\tthis.#state.update(\"ack\")\n\t}\n\n\tonError(code: bigint, reason: string) {\n\t\tif (this.closed()) return\n\n\t\tconst err = new Error(`ANNOUNCE_ERROR (${code})` + reason ? `: ${reason}` : \"\")\n\t\tthis.#state.update(err)\n\t}\n}\n\nexport class SubscribeRecv {\n\t#control: Control.Stream\n\t#objects: Objects\n\t#id: bigint\n\t#trackId: bigint\n\t#subscriberPriority: number\n\tgroupOrder: Control.GroupOrder\n\n\treadonly namespace: string\n\treadonly track: string\n\n\t// The current state of the subscription.\n\t#state: \"init\" | \"ack\" | \"closed\" = \"init\"\n\n\tconstructor(control: Control.Stream, objects: Objects, msg: Control.Subscribe) {\n\t\tthis.#control = control // so we can send messages\n\t\tthis.#objects = objects // so we can send objects\n\t\tthis.#id = msg.id\n\t\tthis.#trackId = msg.trackId\n\t\tthis.namespace = msg.namespace\n\t\tthis.track = msg.name\n\t\tthis.#subscriberPriority = msg.subscriber_priority\n\t\tthis.groupOrder = msg.group_order\n\t}\n\n\t// Acknowledge the subscription as valid.\n\tasync ack() {\n\t\tif (this.#state !== \"init\") return\n\t\tthis.#state = \"ack\"\n\n\t\t// Send the control message.\n\t\treturn this.#control.send({\n\t\t\tkind: Control.Msg.SubscribeOk,\n\t\t\tid: this.#id,\n\t\t\texpires: 0n,\n\t\t\tgroup_order: this.groupOrder,\n\t\t})\n\t}\n\n\t// Close the subscription with an error.\n\tasync close(code = 0n, reason = \"\") {\n\t\tif (this.#state === \"closed\") return\n\t\tthis.#state = \"closed\"\n\n\t\treturn this.#control.send({\n\t\t\tkind: Control.Msg.SubscribeDone,\n\t\t\tid: this.#id,\n\t\t\tcode,\n\t\t\treason,\n\t\t})\n\t}\n\n\t// Create a writable data stream for the entire track\n\tasync serve(props?: { priority: number }): Promise<TrackWriter> {\n\t\treturn this.#objects.send({\n\t\t\ttype: StreamType.Track,\n\t\t\tsub: this.#id,\n\t\t\ttrack: this.#trackId,\n\t\t\tpublisher_priority: props?.priority ?? 127,\n\t\t})\n\t}\n\n\t// Create a writable data stream for a group within the track\n\tasync group(props: { group: number; priority?: number }): Promise<GroupWriter> {\n\t\treturn this.#objects.send({\n\t\t\ttype: StreamType.Group,\n\t\t\tsub: this.#id,\n\t\t\ttrack: this.#trackId,\n\t\t\tgroup: props.group,\n\t\t\tpublisher_priority: props.priority ?? 127,\n\t\t})\n\t}\n\n\t// Create a writable data stream for a single object within the track\n\tasync object(props: { group: number; object: number; priority?: number }): Promise<ObjectWriter> {\n\t\treturn this.#objects.send({\n\t\t\ttype: StreamType.Object,\n\t\t\tsub: this.#id,\n\t\t\ttrack: this.#trackId,\n\t\t\tgroup: props.group,\n\t\t\tobject: props.object,\n\t\t\tpublisher_priority: props.priority ?? 127,\n\t\t\tstatus: 0,\n\t\t})\n\t}\n}\n","import * as Control from \"./control\"\nimport { Queue, Watch } from \"../common/async\"\nimport { Objects } from \"./objects\"\nimport type { TrackReader, GroupReader, ObjectReader } from \"./objects\"\n\nexport class Subscriber {\n\t// Use to send control messages.\n\t#control: Control.Stream\n\n\t// Use to send objects.\n\t#objects: Objects\n\n\t// Announced broadcasts.\n\t#announce = new Map<string, AnnounceRecv>()\n\t#announceQueue = new Watch<AnnounceRecv[]>([])\n\n\t// Our subscribed tracks.\n\t#subscribe = new Map<bigint, SubscribeSend>()\n\t#subscribeNext = 0n\n\n\t#trackToIDMap = new Map<string, bigint>()\n\n\tconstructor(control: Control.Stream, objects: Objects) {\n\t\tthis.#control = control\n\t\tthis.#objects = objects\n\t}\n\n\tannounced(): Watch<AnnounceRecv[]> {\n\t\treturn this.#announceQueue\n\t}\n\n\tasync recv(msg: Control.Publisher) {\n\t\tif (msg.kind == Control.Msg.Announce) {\n\t\t\tawait this.recvAnnounce(msg)\n\t\t} else if (msg.kind == Control.Msg.Unannounce) {\n\t\t\tthis.recvUnannounce(msg)\n\t\t} else if (msg.kind == Control.Msg.SubscribeOk) {\n\t\t\tthis.recvSubscribeOk(msg)\n\t\t} else if (msg.kind == Control.Msg.SubscribeError) {\n\t\t\tawait this.recvSubscribeError(msg)\n\t\t} else if (msg.kind == Control.Msg.SubscribeDone) {\n\t\t\tawait this.recvSubscribeDone(msg)\n\t\t} else {\n\t\t\tthrow new Error(`unknown control message`) // impossible\n\t\t}\n\t}\n\n\tasync recvAnnounce(msg: Control.Announce) {\n\t\tif (this.#announce.has(msg.namespace)) {\n\t\t\tthrow new Error(`duplicate announce for namespace: ${msg.namespace}`)\n\t\t}\n\n\t\tawait this.#control.send({ kind: Control.Msg.AnnounceOk, namespace: msg.namespace })\n\n\t\tconst announce = new AnnounceRecv(this.#control, msg.namespace)\n\t\tthis.#announce.set(msg.namespace, announce)\n\n\t\tthis.#announceQueue.update((queue) => [...queue, announce])\n\t}\n\n\trecvUnannounce(_msg: Control.Unannounce) {\n\t\tthrow new Error(`TODO Unannounce`)\n\t}\n\n\tasync subscribe(namespace: string, track: string) {\n\t\tconst id = this.#subscribeNext++\n\n\t\tconst subscribe = new SubscribeSend(this.#control, id, namespace, track)\n\t\tthis.#subscribe.set(id, subscribe)\n\n\t\tthis.#trackToIDMap.set(track, id)\n\n\t\tawait this.#control.send({\n\t\t\tkind: Control.Msg.Subscribe,\n\t\t\tid,\n\t\t\ttrackId: id,\n\t\t\tnamespace,\n\t\t\tname: track,\n\t\t\tsubscriber_priority: 127, // default to mid value, see: https://github.com/moq-wg/moq-transport/issues/504\n\t\t\tgroup_order: Control.GroupOrder.Publisher,\n\t\t\tlocation: {\n\t\t\t\tmode: \"latest_group\",\n\t\t\t},\n\t\t})\n\n\t\treturn subscribe\n\t}\n\n\tasync unsubscribe(track: string) {\n\t\tif (this.#trackToIDMap.has(track)) {\n\t\t\tconst trackID = this.#trackToIDMap.get(track)\n\t\t\tif (trackID === undefined) {\n\t\t\t\tconsole.warn(`Exception track ${track} not found in trackToIDMap.`)\n\t\t\t\treturn\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait this.#control.send({ kind: Control.Msg.Unsubscribe, id: trackID })\n\t\t\t\tthis.#trackToIDMap.delete(track)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Failed to unsubscribe from track ${track}:`, error)\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(`During unsubscribe request initiation attempt track ${track} not found in trackToIDMap.`)\n\t\t}\n\t}\n\n\trecvSubscribeOk(msg: Control.SubscribeOk) {\n\t\tconst subscribe = this.#subscribe.get(msg.id)\n\t\tif (!subscribe) {\n\t\t\tthrow new Error(`subscribe ok for unknown id: ${msg.id}`)\n\t\t}\n\n\t\tsubscribe.onOk()\n\t}\n\n\tasync recvSubscribeError(msg: Control.SubscribeError) {\n\t\tconst subscribe = this.#subscribe.get(msg.id)\n\t\tif (!subscribe) {\n\t\t\tthrow new Error(`subscribe error for unknown id: ${msg.id}`)\n\t\t}\n\n\t\tawait subscribe.onError(msg.code, msg.reason)\n\t}\n\n\tasync recvSubscribeDone(msg: Control.SubscribeDone) {\n\t\tconst subscribe = this.#subscribe.get(msg.id)\n\t\tif (!subscribe) {\n\t\t\tthrow new Error(`subscribe error for unknown id: ${msg.id}`)\n\t\t}\n\n\t\tawait subscribe.onError(msg.code, msg.reason)\n\t}\n\n\tasync recvObject(reader: TrackReader | GroupReader | ObjectReader) {\n\t\tconst subscribe = this.#subscribe.get(reader.header.track)\n\t\tif (!subscribe) {\n\t\t\tthrow new Error(`data for for unknown track: ${reader.header.track}`)\n\t\t}\n\n\t\tawait subscribe.onData(reader)\n\t}\n}\n\nexport class AnnounceRecv {\n\t#control: Control.Stream\n\n\treadonly namespace: string\n\n\t// The current state of the announce\n\t#state: \"init\" | \"ack\" | \"closed\" = \"init\"\n\n\tconstructor(control: Control.Stream, namespace: string) {\n\t\tthis.#control = control // so we can send messages\n\t\tthis.namespace = namespace\n\t}\n\n\t// Acknowledge the subscription as valid.\n\tasync ok() {\n\t\tif (this.#state !== \"init\") return\n\t\tthis.#state = \"ack\"\n\n\t\t// Send the control message.\n\t\treturn this.#control.send({ kind: Control.Msg.AnnounceOk, namespace: this.namespace })\n\t}\n\n\tasync close(code = 0n, reason = \"\") {\n\t\tif (this.#state === \"closed\") return\n\t\tthis.#state = \"closed\"\n\n\t\treturn this.#control.send({ kind: Control.Msg.AnnounceError, namespace: this.namespace, code, reason })\n\t}\n}\n\nexport class SubscribeSend {\n\t#control: Control.Stream\n\t#id: bigint\n\n\treadonly namespace: string\n\treadonly track: string\n\n\t// A queue of received streams for this subscription.\n\t#data = new Queue<TrackReader | GroupReader | ObjectReader>()\n\n\tconstructor(control: Control.Stream, id: bigint, namespace: string, track: string) {\n\t\tthis.#control = control // so we can send messages\n\t\tthis.#id = id\n\t\tthis.namespace = namespace\n\t\tthis.track = track\n\t}\n\n\tasync close(_code = 0n, _reason = \"\") {\n\t\t// TODO implement unsubscribe\n\t\t// await this.#inner.sendReset(code, reason)\n\t}\n\n\tonOk() {\n\t\t// noop\n\t}\n\n\tasync onError(code: bigint, reason: string) {\n\t\tif (code == 0n) {\n\t\t\treturn await this.#data.close()\n\t\t}\n\n\t\tif (reason !== \"\") {\n\t\t\treason = `: ${reason}`\n\t\t}\n\n\t\tconst err = new Error(`SUBSCRIBE_ERROR (${code})${reason}`)\n\t\treturn await this.#data.abort(err)\n\t}\n\n\tasync onData(reader: TrackReader | GroupReader | ObjectReader) {\n\t\tif (!this.#data.closed()) await this.#data.push(reader)\n\t}\n\n\t// Receive the next a readable data stream\n\tasync data() {\n\t\treturn await this.#data.next()\n\t}\n}\n","import * as Control from \"./control\"\nimport { Objects } from \"./objects\"\nimport { asError } from \"../common/error\"\n\nimport { Publisher } from \"./publisher\"\nimport { Subscriber } from \"./subscriber\"\n\nexport class Connection {\n\t// The established WebTransport session.\n\t#quic: WebTransport\n\n\t// Use to receive/send control messages.\n\t#control: Control.Stream\n\n\t// Use to receive/send objects.\n\t#objects: Objects\n\n\t// Module for contributing tracks.\n\t#publisher: Publisher\n\n\t// Module for distributing tracks.\n\t#subscriber: Subscriber\n\n\t// Async work running in the background\n\t#running: Promise<void>\n\n\tconstructor(quic: WebTransport, control: Control.Stream, objects: Objects) {\n\t\tthis.#quic = quic\n\t\tthis.#control = control\n\t\tthis.#objects = objects\n\n\t\tthis.#publisher = new Publisher(this.#control, this.#objects)\n\t\tthis.#subscriber = new Subscriber(this.#control, this.#objects)\n\n\t\tthis.#running = this.#run()\n\t}\n\n\tclose(code = 0, reason = \"\") {\n\t\tthis.#quic.close({ closeCode: code, reason })\n\t}\n\n\tasync #run(): Promise<void> {\n\t\tawait Promise.all([this.#runControl(), this.#runObjects()])\n\t}\n\n\tannounce(namespace: string) {\n\t\treturn this.#publisher.announce(namespace)\n\t}\n\n\tannounced() {\n\t\treturn this.#subscriber.announced()\n\t}\n\n\tsubscribe(namespace: string, track: string) {\n\t\treturn this.#subscriber.subscribe(namespace, track)\n\t}\n\n\tunsubscribe(track: string) {\n\t\treturn this.#subscriber.unsubscribe(track)\n\t}\n\n\tsubscribed() {\n\t\treturn this.#publisher.subscribed()\n\t}\n\n\tasync #runControl() {\n\t\t// Receive messages until the connection is closed.\n\t\tfor (;;) {\n\t\t\tconst msg = await this.#control.recv()\n\t\t\tawait this.#recv(msg)\n\t\t}\n\t}\n\n\tasync #runObjects() {\n\t\tfor (;;) {\n\t\t\tconst obj = await this.#objects.recv()\n\t\t\tif (!obj) break\n\n\t\t\tawait this.#subscriber.recvObject(obj)\n\t\t}\n\t}\n\n\tasync #recv(msg: Control.Message) {\n\t\tif (Control.isPublisher(msg)) {\n\t\t\tawait this.#subscriber.recv(msg)\n\t\t} else {\n\t\t\tawait this.#publisher.recv(msg)\n\t\t}\n\t}\n\n\tasync closed(): Promise<Error> {\n\t\ttry {\n\t\t\tawait this.#running\n\t\t\treturn new Error(\"closed\")\n\t\t} catch (e) {\n\t\t\treturn asError(e)\n\t\t}\n\t}\n}\n","import * as Stream from \"./stream\"\nimport * as Setup from \"./setup\"\nimport * as Control from \"./control\"\nimport { Objects } from \"./objects\"\nimport { Connection } from \"./connection\"\n\nexport interface ClientConfig {\n\turl: string\n\n\t// Parameters used to create the MoQ session\n\trole: Setup.Role\n\n\t// If set, the server fingerprint will be fetched from this URL.\n\t// This is required to use self-signed certificates with Chrome (May 2023)\n\tfingerprint?: string\n}\n\nexport class Client {\n\t#fingerprint: Promise<WebTransportHash | undefined>\n\n\treadonly config: ClientConfig\n\n\tconstructor(config: ClientConfig) {\n\t\tthis.config = config\n\n\t\tthis.#fingerprint = this.#fetchFingerprint(config.fingerprint).catch((e) => {\n\t\t\tconsole.warn(\"failed to fetch fingerprint: \", e)\n\t\t\treturn undefined\n\t\t})\n\t}\n\n\tasync connect(): Promise<Connection> {\n\t\t// Helper function to make creating a promise easier\n\t\tconst options: WebTransportOptions = {}\n\n\t\tconst fingerprint = await this.#fingerprint\n\t\tif (fingerprint) options.serverCertificateHashes = [fingerprint]\n\n\t\tconst quic = new WebTransport(this.config.url, options)\n\t\tawait quic.ready\n\n\t\tconst stream = await quic.createBidirectionalStream()\n\n\t\tconst writer = new Stream.Writer(stream.writable)\n\t\tconst reader = new Stream.Reader(new Uint8Array(), stream.readable)\n\n\t\tconst setup = new Setup.Stream(reader, writer)\n\n\t\t// Send the setup message.\n\t\tawait setup.send.client({ versions: [Setup.Version.DRAFT_05], role: this.config.role })\n\n\t\t// Receive the setup message.\n\t\t// TODO verify the SETUP response.\n\t\tconst server = await setup.recv.server()\n\n\t\tif (server.version != Setup.Version.DRAFT_05) {\n\t\t\tthrow new Error(`unsupported server version: ${server.version}`)\n\t\t}\n\n\t\tconst control = new Control.Stream(reader, writer)\n\t\tconst objects = new Objects(quic)\n\n\t\treturn new Connection(quic, control, objects)\n\t}\n\n\tasync #fetchFingerprint(url?: string): Promise<WebTransportHash | undefined> {\n\t\tif (!url) return\n\n\t\t// TODO remove this fingerprint when Chrome WebTransport accepts the system CA\n\t\tconst response = await fetch(url)\n\t\tconst hexString = await response.text()\n\n\t\tconst hexBytes = new Uint8Array(hexString.length / 2)\n\t\tfor (let i = 0; i < hexBytes.length; i += 1) {\n\t\t\thexBytes[i] = parseInt(hexString.slice(2 * i, 2 * i + 2), 16)\n\t\t}\n\n\t\treturn {\n\t\t\talgorithm: \"sha-256\",\n\t\t\tvalue: hexBytes,\n\t\t}\n\t}\n}\n","import * as Message from \"./worker/message\"\n\nimport { Connection } from \"../transport/connection\"\nimport * as Catalog from \"../media/catalog\"\nimport { asError } from \"../common/error\"\n\nimport Backend from \"./backend\"\n\nimport { Client } from \"../transport/client\"\nimport { GroupReader } from \"../transport/objects\"\n\nexport type Range = Message.Range\nexport type Timeline = Message.Timeline\n\nexport interface PlayerConfig {\n\turl: string\n\tnamespace: string\n\tfingerprint?: string // URL to fetch TLS certificate fingerprint\n\tcanvas: HTMLCanvasElement\n}\n\n// This class must be created on the main thread due to AudioContext.\nexport default class Player {\n\t#backend: Backend\n\n\t// A periodically updated timeline\n\t//#timeline = new Watch<Timeline | undefined>(undefined)\n\n\t#connection: Connection\n\t#catalog: Catalog.Root\n\t#tracksByName: Map<string, Catalog.Track>\n\t#tracknum: number\n\t#audioTrackName: string\n\t#videoTrackName: string\n\t#muted: boolean\n\t#paused: boolean\n\n\t// Running is a promise that resolves when the player is closed.\n\t// #close is called with no error, while #abort is called with an error.\n\t#running: Promise<void>\n\t#close!: () => void\n\t#abort!: (err: Error) => void\n\t#trackTasks: Map<string, Promise<void>> = new Map()\n\n\tprivate constructor(connection: Connection, catalog: Catalog.Root, backend: Backend, tracknum: number) {\n\t\tthis.#connection = connection\n\t\tthis.#catalog = catalog\n\t\tthis.#tracksByName = new Map(catalog.tracks.map((track) => [track.name, track]))\n\t\tthis.#backend = backend\n\t\tthis.#tracknum = tracknum\n\t\tthis.#audioTrackName = \"\"\n\t\tthis.#videoTrackName = \"\"\n\t\tthis.#muted = false\n\t\tthis.#paused = false\n\n\t\tconst abort = new Promise<void>((resolve, reject) => {\n\t\t\tthis.#close = resolve\n\t\t\tthis.#abort = reject\n\t\t})\n\n\t\t// Async work\n\t\tthis.#running = abort.catch(this.#close)\n\n\t\tthis.#run().catch((err) => {\n\t\t\tconsole.error(\"Error in #run():\", err)\n\t\t\tthis.#abort(err)\n\t\t})\n\t}\n\n\tstatic async create(config: PlayerConfig, tracknum: number): Promise<Player> {\n\t\tconst client = new Client({ url: config.url, fingerprint: config.fingerprint, role: \"subscriber\" })\n\t\tconst connection = await client.connect()\n\n\t\tconst catalog = await Catalog.fetch(connection, config.namespace)\n\t\tconsole.log(\"catalog\", catalog)\n\n\t\tconst canvas = config.canvas.transferControlToOffscreen()\n\t\tconst backend = new Backend({ canvas, catalog })\n\n\t\treturn new Player(connection, catalog, backend, tracknum)\n\t}\n\n\tasync #run() {\n\t\tconst inits = new Set<[string, string]>()\n\t\tconst tracks = new Array<Catalog.Track>()\n\n\t\tthis.#catalog.tracks.forEach((track, index) => {\n\t\t\tif (index == this.#tracknum || Catalog.isAudioTrack(track)) {\n\t\t\t\tif (!track.namespace) throw new Error(\"track has no namespace\")\n\t\t\t\tif (track.initTrack) inits.add([track.namespace, track.initTrack])\n\t\t\t\ttracks.push(track)\n\t\t\t}\n\t\t})\n\n\t\t// Call #runInit on each unique init track\n\t\t// TODO do this in parallel with #runTrack to remove a round trip\n\t\tawait Promise.all(Array.from(inits).map((init) => this.#runInit(...init)))\n\n\t\t// Call #runTrack on each track\n\t\ttracks.forEach((track) => {\n\t\t\tthis.#runTrack(track)\n\t\t})\n\t}\n\n\tasync #runInit(namespace: string, name: string) {\n\t\tconst sub = await this.#connection.subscribe(namespace, name)\n\t\ttry {\n\t\t\tconst init = await Promise.race([sub.data(), this.#running])\n\t\t\tif (!init) throw new Error(\"no init data\")\n\n\t\t\t// We don't care what type of reader we get, we just want the payload.\n\t\t\tconst chunk = await init.read()\n\t\t\tif (!chunk) throw new Error(\"no init chunk\")\n\t\t\tif (!(chunk.payload instanceof Uint8Array)) throw new Error(\"invalid init chunk\")\n\n\t\t\tthis.#backend.init({ data: chunk.payload, name })\n\t\t} finally {\n\t\t\tawait sub.close()\n\t\t}\n\t}\n\n\tasync #trackTask(track: Catalog.Track) {\n\t\tif (!track.namespace) throw new Error(\"track has no namespace\")\n\n\t\tif (this.#paused) return\n\n\t\tconst kind = Catalog.isVideoTrack(track) ? \"video\" : Catalog.isAudioTrack(track) ? \"audio\" : \"unknown\"\n\t\tif (kind == \"audio\" && this.#muted) return\n\n\t\tconst sub = await this.#connection.subscribe(track.namespace, track.name)\n\n\t\tif (kind == \"audio\") {\n\t\t\t// Save ref to last audio track we subscribed to for unmuting\n\t\t\tthis.#audioTrackName = track.name\n\t\t}\n\n\t\tif (kind == \"video\") {\n\t\t\tthis.#videoTrackName = track.name\n\t\t}\n\n\t\ttry {\n\t\t\tfor (;;) {\n\t\t\t\tconst segment = await Promise.race([sub.data(), this.#running])\n\t\t\t\tif (!segment) continue\n\n\t\t\t\tif (!(segment instanceof GroupReader)) {\n\t\t\t\t\tthrow new Error(`expected group reader for segment: ${track.name}`)\n\t\t\t\t}\n\n\t\t\t\tif (kind == \"unknown\") {\n\t\t\t\t\tthrow new Error(`unknown track kind: ${track.name}`)\n\t\t\t\t}\n\n\t\t\t\tif (!track.initTrack) {\n\t\t\t\t\tthrow new Error(`no init track for segment: ${track.name}`)\n\t\t\t\t}\n\n\t\t\t\tconst [buffer, stream] = segment.stream.release()\n\n\t\t\t\tthis.#backend.segment({\n\t\t\t\t\tinit: track.initTrack,\n\t\t\t\t\tkind,\n\t\t\t\t\theader: segment.header,\n\t\t\t\t\tbuffer,\n\t\t\t\t\tstream,\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error in #runTrack:\", error)\n\t\t} finally {\n\t\t\tawait sub.close()\n\t\t}\n\t}\n\n\t#runTrack(track: Catalog.Track) {\n\t\tif (this.#trackTasks.has(track.name)) {\n\t\t\tconsole.warn(`Already exist a runTrack task for the track: ${track.name}`)\n\t\t\treturn\n\t\t}\n\n\t\tconst task = (async () => this.#trackTask(track))()\n\n\t\tthis.#trackTasks.set(track.name, task)\n\n\t\ttask.catch((err) => {\n\t\t\tconsole.error(`Error to subscribe to track ${track.name}`, err)\n\t\t}).finally(() => {\n\t\t\tthis.#trackTasks.delete(track.name)\n\t\t})\n\t}\n\n\tgetCatalog() {\n\t\treturn this.#catalog\n\t}\n\n\tgetCurrentTrack() {\n\t\tif (this.#tracknum >= 0 && this.#tracknum < this.#catalog.tracks.length) {\n\t\t\treturn this.#catalog.tracks[this.#tracknum]\n\t\t} else {\n\t\t\tconsole.warn(\"Invalid track number:\", this.#tracknum)\n\t\t\treturn null\n\t\t}\n\t}\n\n\tgetVideoTracks() {\n\t\treturn this.#catalog.tracks.filter(Catalog.isVideoTrack).map((track) => track.name)\n\t}\n\n\tgetAudioTracks() {\n\t\treturn this.#catalog.tracks.filter(Catalog.isAudioTrack).map((track) => track.name)\n\t}\n\n\tasync switchTrack(trackname: string) {\n\t\tconst currentTrack = this.getCurrentTrack()\n\t\tif (this.#paused) {\n\t\t\tthis.#videoTrackName = trackname\n\t\t\treturn\n\t\t}\n\t\tif (currentTrack) {\n\t\t\tconsole.log(`Unsubscribing from track: ${currentTrack.name} and Subscribing to track: ${trackname}`)\n\t\t\tawait this.unsubscribeFromTrack(currentTrack.name)\n\t\t} else {\n\t\t\tconsole.log(`Subscribing to track: ${trackname}`)\n\t\t}\n\t\tthis.#tracknum = this.#catalog.tracks.findIndex((track) => track.name === trackname)\n\t\tconst tracksToStream = this.#catalog.tracks.filter((track) => track.name === trackname)\n\t\tawait Promise.all(tracksToStream.map((track) => this.#runTrack(track)))\n\t}\n\n\tasync mute(isMuted: boolean) {\n\t\tthis.#muted = isMuted\n\t\tif (isMuted) {\n\t\t\tconsole.log(\"Unsubscribing from audio track: \", this.#audioTrackName)\n\t\t\tawait this.unsubscribeFromTrack(this.#audioTrackName)\n\t\t\tawait this.#backend.mute()\n\t\t} else {\n\t\t\tconsole.log(\"Subscribing to audio track: \", this.#audioTrackName)\n\t\t\tthis.subscribeFromTrackName(this.#audioTrackName)\n\t\t\tawait this.#backend.unmute()\n\t\t}\n\t}\n\n\tasync unsubscribeFromTrack(trackname: string) {\n\t\tconsole.log(`Unsubscribing from track: ${trackname}`)\n\t\tawait this.#connection.unsubscribe(trackname)\n\t\tconst task = this.#trackTasks.get(trackname)\n\t\tif (task) {\n\t\t\tawait task\n\t\t}\n\t}\n\n\tsubscribeFromTrackName(trackname: string) {\n\t\tconsole.log(`Subscribing to track: ${trackname}`)\n\t\tconst track = this.#tracksByName.get(trackname)\n\t\tif (track) {\n\t\t\tthis.#runTrack(track)\n\t\t} else {\n\t\t\tconsole.warn(`Track ${trackname} not in #tracksByName`)\n\t\t}\n\t}\n\n\t#onMessage(msg: Message.FromWorker) {\n\t\tif (msg.timeline) {\n\t\t\t//this.#timeline.update(msg.timeline)\n\t\t}\n\t}\n\n\tasync close(err?: Error) {\n\t\tif (err) this.#abort(err)\n\t\telse this.#close()\n\n\t\tif (this.#connection) this.#connection.close()\n\t\tif (this.#backend) await this.#backend.close()\n\t}\n\n\tasync closed(): Promise<Error | undefined> {\n\t\ttry {\n\t\t\tawait this.#running\n\t\t} catch (e) {\n\t\t\treturn asError(e)\n\t\t}\n\t}\n\n\t/*\n\tplay() {\n\t\tthis.#backend.play({ minBuffer: 0.5 }) // TODO configurable\n\t}\n\n\tseek(timestamp: number) {\n\t\tthis.#backend.seek({ timestamp })\n\t}\n\t*/\n\n\tasync play() {\n\t\tif (this.#paused) {\n\t\t\tthis.#paused = false\n\t\t\tthis.subscribeFromTrackName(this.#videoTrackName)\n\t\t\tif (!this.#muted) {\n\t\t\t\tthis.subscribeFromTrackName(this.#audioTrackName)\n\t\t\t\tawait this.#backend.unmute()\n\t\t\t}\n\t\t} else {\n\t\t\tawait this.unsubscribeFromTrack(this.#videoTrackName)\n\t\t\tawait this.unsubscribeFromTrack(this.#audioTrackName)\n\t\t\tawait this.#backend.mute()\n\t\t\tthis.#backend.pause()\n\t\t\tthis.#paused = true\n\t\t}\n\t}\n\n\t/*\n\tasync *timeline() {\n\t\tfor (;;) {\n\t\t\tconst [timeline, next] = this.#timeline.value()\n\t\t\tif (timeline) yield timeline\n\t\t\tif (!next) break\n\n\t\t\tawait next\n\t\t}\n\t}\n\t*/\n}\n"],"names":["fetch","registerMyAudioWorklet","MediaWorker","Decoder","Encoder","Control.Msg","Control.GroupOrder","Control.isPublisher","Stream.Writer","Stream.Reader","Setup.Stream","Setup.Version","Control.Stream","Catalog.fetch","Catalog.isAudioTrack","Catalog.isVideoTrack"],"mappings":"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"}